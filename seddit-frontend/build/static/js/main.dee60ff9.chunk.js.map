{"version":3,"sources":["requests.js","Post.js","Feed.js","Auth.js","About.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","getRequest","extension","fetch","then","response","json","myJson","console","log","postRequest","req_body","method","headers","Accept","Content-Type","body","JSON","stringify","Post","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isToday","someDate","today","Date","getDate","getMonth","getFullYear","state","commenting","toggleComment","bind","assertThisInitialized","date","getTime","getTimezoneOffset","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","year","month","day","user","setState","alert","react_default","a","createElement","className","author","formatDate","created","title","Post_Like","post_id","id","role","onClick","Post_Comment","sendComment","toggleView","React","Component","Like","_this2","componentDidMount","getLikes","isLiked","interval","setInterval","likes","liked","handleClick","_this3","_this4","e","_this5","preventDefault","src","width","height","alt","Comment","_this6","isLoading","posts","rows","comments","handleSubmit","handleChange","_this7","commentsRes","event","_this8","comment","concat","defineProperty","target","name","value","react_spinners","sizeUnit","size","loading","displayComments","length","map","idx","key","typeComment","onSubmit","onChange","placeholder","required","type","Feed","componentWillMount","_this$setState","loadPosts","page","window","onscroll","document","documentElement","offsetHeight","innerHeight","scrollTop","Cookies","get","auth_token","post","newPosts","slice","unshift","$","click","feedItems","src_Post","writePostBtn","data-toggle","data-target","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","Login","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","username","password","onLogin","set","toFeed","errorMsg","stop","_x","apply","arguments","react_router","to","autoFocus","disabled","validateForm","Logout","onLogout","remove","Register","_ref2","_callee2","_context2","abrupt","onRegister","confirmPassword","_x2","About","App","handleUserChange","App_Header","path","exact","component","render","src_Feed","Auth_Login","Auth_Register","Auth_Logout","Header","leftnav","rightnav","react_router_dom","aria-controls","aria-expanded","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yTACMA,EAAU,wCAET,SAASC,EAAWC,GACvB,OAAOC,MAAMH,EAAUE,GACtBE,KAAK,SAACC,GACH,OAAOA,EAASC,SAEnBF,KAAK,SAACG,GAEH,OADAC,QAAQC,IAAIF,GACLA,IAKR,SAASG,EAAYR,EAAWS,GACnC,OAAOR,MAAMH,EAAUE,EAAW,CAC9BU,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KACtBP,KAAK,SAACC,GACL,OAAOA,EAASC,SAEnBF,KAAK,SAACG,GAEH,OADAC,QAAQC,IAAIF,GACLA,QCxBTY,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,QAAU,SAACC,GACP,IAAMC,EAAQ,IAAIC,KAClB,OAAOF,EAASG,YAAcF,EAAME,WAClCH,EAASI,aAAeH,EAAMG,YAC9BJ,EAASK,gBAAkBJ,EAAMI,eAVnCb,EAAKc,MAAQ,CACTC,YAAY,GAEhBf,EAAKgB,cAAgBhB,EAAKgB,cAAcC,KAAnBhB,OAAAiB,EAAA,EAAAjB,CAAAD,IALPA,0EAePmB,GAGP,OAFAA,EAAO,IAAIT,KAAKS,GAChBA,EAAO,IAAIT,KAAKS,EAAKC,UAAqC,IAAzBD,EAAKE,qBACnClB,KAAKI,QAAQY,GACLA,EAAKG,mBAAmB,QAAS,CAACC,QAAQ,EAAMC,KAAM,UAAWC,OAAQ,YAE7EN,EAAKO,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,oDAI5E1B,KAAKJ,MAAM+B,KACV3B,KAAK4B,SAAS,CAAChB,YAAaZ,KAAKW,MAAMC,aAEvCiB,MAAM,iDAIV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAejC,KAAKJ,MAAMsC,OAAvC,IAA+CJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBjC,KAAKmC,WAAWnC,KAAKJ,MAAMwC,WAC7GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcjC,KAAKJ,MAAMyC,OACvCP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAajC,KAAKJ,MAAMJ,MACrCsC,EAAAC,EAAAC,cAACM,EAAD,CAAMC,QAASvC,KAAKJ,MAAM4C,GAAIb,KAAM3B,KAAKJ,MAAM+B,OAC/CG,EAAAC,EAAAC,cAAA,KAAGS,KAAK,SAASR,UAAU,0BAA0BS,QAAS1C,KAAKa,eAAnE,YAEJiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAD,CAASJ,QAASvC,KAAKJ,MAAM4C,GAAIb,KAAM3B,KAAKJ,MAAM+B,KAAMiB,YAAa5C,KAAKW,MAAMC,WAAYiC,WAAY7C,KAAKa,yBA3C9GiC,IAAMC,WAkDnBC,cACF,SAAAA,EAAYpD,GAAM,IAAAqD,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACdC,EAAAnD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KAWVsD,kBAAoB,WAChBD,EAAKE,WACLF,EAAKG,UAELH,EAAKI,SAAWC,YAAY,WACxBL,EAAKE,YACN,MAfHF,EAAKtC,MAAQ,CACT4C,MAAO,KACPC,MAAO,MAEXP,EAAKE,SAAWF,EAAKE,SAASrC,KAAdhB,OAAAiB,EAAA,EAAAjB,CAAAmD,IAChBA,EAAKG,QAAUH,EAAKG,QAAQtC,KAAbhB,OAAAiB,EAAA,EAAAjB,CAAAmD,IACfA,EAAKQ,YAAcR,EAAKQ,YAAY3C,KAAjBhB,OAAAiB,EAAA,EAAAjB,CAAAmD,IATLA,0EAoBR,IAAAS,EAAA1D,KACNvB,EAAW,QAAQuB,KAAKJ,MAAM2C,QAAQ,KAAK3D,KAAK,SAACC,GAC7C6E,EAAK9B,SAAS,CAAC2B,MAAO1E,EAAQ,4CAG7B,IAAA8E,EAAA3D,KACFA,KAAKJ,MAAM+B,KACVzC,EAAY,WAAY,CAACyC,KAAQ3B,KAAKJ,MAAM+B,KAAMY,QAAWvC,KAAKJ,MAAM2C,UAAU3D,KAAK,SAACC,GACpF8E,EAAK/B,SAAS,CAAC4B,MAAO3E,EAAQ,UAGlCmB,KAAK4B,SAAS,CAAC4B,OAAO,wCAGlBI,GAAE,IAAAC,EAAA7D,KACV4D,EAAEE,iBAEE9D,KAAKJ,MAAM+B,KAKZ3B,KAAKW,MAAM6C,MACVtE,EAAY,UAAW,CAACyC,KAAQ3B,KAAKJ,MAAM+B,KAAMY,QAAWvC,KAAKJ,MAAM2C,UAAU3D,KAAK,SAACC,GACzD,OAAvBA,EAAQ,QACPgF,EAAKjC,SAAS,CACV2B,MAAOM,EAAKlD,MAAM4C,MAAQ,EAC1BC,OAAO,MAMnBtE,EAAY,QAAUc,KAAKJ,MAAM2C,QAAU,IACvC,CAACZ,KAAQ3B,KAAKJ,MAAM+B,KAAMY,QAAWvC,KAAKJ,MAAM2C,UAClD3D,KAAK,SAACC,GACsB,OAAvBA,EAAQ,QACPgF,EAAKjC,SAAS,CACV2B,MAAOM,EAAKlD,MAAM4C,MAAQ,EAC1BC,OAAO,MArBnB3B,MAAM,iDA2BV,OACIC,EAAAC,EAAAC,cAAA,KAAGS,KAAK,SAASR,UAAU,kCAAkCS,QAAS1C,KAAKyD,aACtEzD,KAAKW,MAAM6C,MACZ1B,EAAAC,EAAAC,cAAA,OAAK+B,IAA8B,yBAA0BC,MAAM,KAAKC,OAAO,KAAKC,IAAI,KACxFpC,EAAAC,EAAAC,cAAA,OAAK+B,IAA8B,wBAAyBC,MAAM,KAAKC,OAAO,KAAKC,IAAI,KACvFpC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQjC,KAAKW,MAAM4C,eAvEhCT,IAAMC,WA6EnBoB,cACF,SAAAA,EAAYvE,GAAM,IAAAwE,EAAA,OAAAtE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACdC,EAAAtE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMJ,KA+CVyE,UAAY,WACR,OAA2B,MAApBD,EAAKzD,MAAM2D,OA/ClBF,EAAKzD,MAAQ,CACT4D,KAAM,EACN/E,KAAM,GACNgF,SAAU,MAEdJ,EAAKK,aAAeL,EAAKK,aAAa3D,KAAlBhB,OAAAiB,EAAA,EAAAjB,CAAAsE,IACpBA,EAAKM,aAAeN,EAAKM,aAAa5D,KAAlBhB,OAAAiB,EAAA,EAAAjB,CAAAsE,IARNA,mFAUC,IAAAO,EAAA3E,KACfvB,EAAW,eAAiBuB,KAAKJ,MAAM2C,QAAU,KAAK3D,KAAK,SAACC,GACxD,IAAM+F,EAAc/F,EAAQ,SAC5B8F,EAAK/C,SAAS,CAAC4C,SAAUI,MAG7B5E,KAAKqD,SAAWC,YAAY,WACxB7E,EAAW,eAAiBkG,EAAK/E,MAAM2C,QAAU,KAAK3D,KAAK,SAACC,GACxD,IAAM+F,EAAc/F,EAAQ,SAC5B8F,EAAK/C,SAAS,CAAC4C,SAAUI,OAE9B,0CAEMC,GAAM,IAAAC,EAAA9E,KACf6E,EAAMf,iBAEF9D,KAAKJ,MAAM+B,MAKfzC,EAAY,eAAiBc,KAAKJ,MAAM2C,QAAU,IAC9C,CAACZ,KAAQ3B,KAAKJ,MAAM+B,KAAMnC,KAAQQ,KAAKW,MAAMnB,OAC/CZ,KAAK,SAACC,GACJ,IAAIkG,EAAUlG,EAAQ,QACtBiG,EAAKlD,SAAS,CAAC4C,SAAUM,EAAKnE,MAAM6D,SAASQ,OAAO,CAC5CrD,KAAQoD,EAAO,KAAUvF,KAAQuF,EAAO,KAAUvC,GAAMuC,EAAO,SAK3E/E,KAAKJ,MAAMiD,cAdPhB,MAAM,qDAgBDgD,GACT7E,KAAK4B,SAAL9B,OAAAmF,EAAA,EAAAnF,CAAA,GACK+E,EAAMK,OAAOC,KAAON,EAAMK,OAAOE,yCAQlC,GAA0B,MAAvBpF,KAAKW,MAAM6D,SACV,OAAO1C,EAAAC,EAAAC,cAACqD,EAAA,UAAD,CACHC,SAAU,KACVC,KAAM,GACNC,QAASxF,KAAKqE,cAGtB,IAAIoB,EAGAA,EADDzF,KAAKW,MAAM6D,SAASkB,OAAS,EACV1F,KAAKW,MAAM6D,SAASmB,IAAI,SAACZ,EAASa,GAAV,OACtC9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU4D,IAAKd,EAAO,IACjCjD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAI+C,EAAO,KAAX,KAAH,IAA8BA,EAAO,SAKzCjD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,gBAGR,IAAI6D,EAAc9F,KAAKJ,MAAMgD,YACzBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,QAAM+D,SAAU/F,KAAKyE,cACjB3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAekD,KAAK,OAAOZ,KAAMvE,KAAKW,MAAM4D,KAAMyB,SAAUhG,KAAK0E,aAAcuB,YAAY,UAAUC,UAAQ,KAEjIpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,SAASlE,UAAU,oBAAoBmD,MAAM,aAK/D,GACN,OACItD,EAAAC,EAAAC,cAAA,WACK8D,EACAL,UA3FC3C,IAAMC,WAkGbpD,IC3FAyG,cAjIX,SAAAA,EAAYxG,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoG,IACdvG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsG,GAAAjG,KAAAH,KAAMJ,KAkBVyG,mBAAqB,WACjB5H,EAAW,WAAWG,KAAK,SAACC,GACxBgB,EAAK+B,SAAS,CAAC0C,MAAOzF,EAAQ,UArBpBgB,EAyBlBqD,kBAAoB,aAzBFrD,EAqClBwE,UAAY,WACR,OAA2B,MAApBxE,EAAKc,MAAM2D,OAtCJzE,EAyClB6E,aAAe,SAACd,GAAM,IAAA0C,EAClBzG,EAAK+B,UAAL0E,EAAA,GAAAxG,OAAAmF,EAAA,EAAAnF,CAAAwG,EACK1C,EAAEsB,OAAOC,KAAOvB,EAAEsB,OAAOE,OAD9BtF,OAAAmF,EAAA,EAAAnF,CAAAwG,EAAA,SAEY1C,EAAEsB,OAAOE,MAAMM,QAF3BY,KA1CczG,EAgDlB0G,UAAY,WACR1G,EAAK+B,SAAS,CAAC4E,KAAM3G,EAAKc,MAAM6F,KAAO,IACvC/H,EAAW,QAAUoB,EAAKc,MAAM6F,KAAO,KAAK5H,KAAK,SAACC,GAC9CgB,EAAK+B,SAAS,CAAC0C,MAAOzE,EAAKc,MAAM2D,MAAMU,OAAOnG,EAAQ,WAjD1DgB,EAAKc,MAAQ,CACT2D,MAAO,KACPjC,MAAO,GACP7C,KAAM,GACNkG,OAAQ,EACRc,KAAM,GAEV3G,EAAK4E,aAAe5E,EAAK4E,aAAa3D,KAAlBhB,OAAAiB,EAAA,EAAAjB,CAAAD,IAEpB4G,OAAOC,SAAW,WAEXC,SAASC,gBAAgBC,cAAgBJ,OAAOK,YAAcH,SAASC,gBAAgBG,YAAc,KACpGlH,EAAK0G,aAdC1G,4EAuDLgF,GAAM,IAAA5B,EAAAjD,KACf6E,EAAMf,iBACH9D,KAAKW,MAAM+E,OAAS,IACnB7D,MAAM,gDAGV3C,EAAY,QAAS,CACjByC,KAAQqF,IAAQC,IAAI,QACpBC,WAAcF,IAAQC,IAAI,cAC1B5E,MAASrC,KAAKW,MAAM0B,MACpB7C,KAAQQ,KAAKW,MAAMnB,OACpBZ,KAAK,SAACC,GACL,IAAIsI,EAAOtI,EAAQ,KACfuI,EAAWnE,EAAKtC,MAAM2D,MAAM+C,QAChCD,EAASE,QAAQH,GACjBlE,EAAKrB,SAAS,CAAC0C,MAAO8C,MAE1BG,IAAE,eAAeC,0CAGb,IACAC,EADA/D,EAAA1D,KAEJ,GAAuB,MAApBA,KAAKW,MAAM2D,MACV,OAAOxC,EAAAC,EAAAC,cAACqD,EAAA,UAAD,CACLC,SAAU,KACVC,KAAM,GACNC,QAASxF,KAAKqE,cAIhBoD,EADgC,IAA5BzH,KAAKW,MAAM2D,MAAMoB,OACT5D,EAAAC,EAAAC,cAAA,4BAGAhC,KAAKW,MAAM2D,MAAMqB,IAAI,SAACwB,EAAMvB,GAAP,OAC7B9D,EAAAC,EAAAC,cAAC0F,EAAD,CAAM7B,IAAKsB,EAAI,GAAQ3E,GAAI2E,EAAI,GAAQxF,KAAM+B,EAAK9D,MAAM+B,KAAMO,OAAQiF,EAAI,OAAY9E,MAAO8E,EAAI,MAAW3H,KAAM2H,EAAI,KAAU/E,QAAS+E,EAAI,QAAa5D,MAAO4D,EAAI,UAI7K,IAAMQ,EAAe3H,KAAKJ,MAAM+B,KAAOG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBO,GAAG,aAAa2D,KAAK,SAASyB,cAAY,QAAQC,cAAY,qBAAzG,cAAmJ,GAE1L,OACI/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVwF,EACAE,EAED7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaO,GAAG,mBAAmBsF,SAAS,KAAKrF,KAAK,SAASsF,kBAAgB,wBAAwBC,cAAY,QAClIlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeQ,KAAK,YAC/BX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcO,GAAG,yBAA/B,WACAV,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,SAAS3D,GAAG,aAAaP,UAAU,QAAQgG,eAAa,QAAQC,aAAW,SACxFpG,EAAAC,EAAAC,cAAA,QAAMgG,cAAY,QAAlB,UAGJlG,EAAAC,EAAAC,cAAA,QAAM+D,SAAU/F,KAAKyE,cACjB3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOQ,GAAG,QAAQP,UAAU,eAAekE,KAAK,OAAOhB,KAAK,QAAQc,YAAY,uBAAuBb,MAAOpF,KAAKW,MAAM0B,MAAO2D,SAAUhG,KAAK0E,aAAcwB,UAAQ,IAAGpE,EAAAC,EAAAC,cAAA,WACxKF,EAAAC,EAAAC,cAAA,YAAUQ,GAAG,OAAOP,UAAU,eAAekE,KAAK,OAAOhB,KAAK,OAAOC,MAAOpF,KAAKW,MAAMnB,KAAMwG,SAAUhG,KAAK0E,aAAcwB,UAAQ,KAEtIpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,YAAOhC,KAAKW,MAAM+E,QAClB5D,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,SAASlE,UAAU,kBAAkBmD,MAAM,wBAtHhEtC,IAAMC,4CCHnBoF,cACF,SAAAA,EAAYvI,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACdtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,KAaV8E,aAAe,SAAAG,GACXhF,EAAK+B,SAAL9B,OAAAmF,EAAA,EAAAnF,CAAA,GACK+E,EAAMK,OAAOC,KAAON,EAAMK,OAAOE,SAhBxBvF,EAmBlB4E,aAnBkB,eAAA2D,EAAAtI,OAAAuI,EAAA,EAAAvI,CAAAwI,EAAAvG,EAAAwG,KAmBH,SAAAC,EAAM3D,GAAN,OAAAyD,EAAAvG,EAAA0G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX/D,EAAMf,iBACN5E,EAAY,SAAU,CAClB2J,SAAYhJ,EAAKc,MAAMkI,SACvBC,SAAYjJ,EAAKc,MAAMmI,WACxBlK,KAAK,SAACG,GACmB,OAArBA,EAAM,QACLc,EAAKD,MAAMmJ,QAAQlJ,EAAKc,MAAMkI,UAE9B7B,IAAQgC,IAAI,OAAQnJ,EAAKc,MAAMkI,UAC/B7B,IAAQgC,IAAI,aAAcjK,EAAM,YAEhCc,EAAK+B,SAAS,CAACqH,QAAQ,MAGvBjK,QAAQC,IAAIF,EAAM,OAClBc,EAAK+B,SAAS,CACVkH,SAAU,GACVI,SAAUnK,EAAM,WAlBjB,wBAAA2J,EAAAS,SAAAX,MAnBG,gBAAAY,GAAA,OAAAhB,EAAAiB,MAAArJ,KAAAsJ,YAAA,GAEdzJ,EAAKc,MAAQ,CACTkI,SAAU,GACVC,SAAU,GACVI,SAAU,GACVD,QAAQ,GANEpJ,8EAWd,OAAOG,KAAKW,MAAMkI,SAASnD,OAAS,GAAK1F,KAAKW,MAAMmI,SAASpD,OAAS,mCAiCtE,OAAyB,IAAtB1F,KAAKW,MAAMsI,OACHnH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAUC,GAAG,WAGpB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,cAAcP,UAAU,QAA/B,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYjC,KAAKW,MAAMuI,UACtCpH,EAAAC,EAAAC,cAAA,QAAM+D,SAAU/F,KAAKyE,cACjB3C,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,sBAAuBF,EAAAC,EAAAC,cAAA,WAC9BF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOhB,KAAK,WAAWlD,UAAU,OAAOmD,MAAOpF,KAAKW,MAAMkI,SAAU7C,SAAUhG,KAAK0E,aAAcwB,UAAQ,EAACuD,WAAS,IAC/H3H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,sBAAuBF,EAAAC,EAAAC,cAAA,WAC9BF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,WAAWhB,KAAK,WAAWlD,UAAU,OAAOmD,MAAOpF,KAAKW,MAAMmI,SAAU9C,SAAUhG,KAAK0E,aAAcwB,UAAQ,IACzHpE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,4BAA4BkE,KAAK,SAASuD,UAAW1J,KAAK2J,eAAgBvE,MAAM,oBA5DrGtC,IAAMC,WAoEpB6G,cACF,SAAAA,EAAYhK,GAAO,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA4J,GAAA9J,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8J,GAAAzJ,KAAAH,KACTJ,0EAQN,OALAV,EAAY,UAAW,CACnByC,KAAQqF,IAAQC,IAAI,UAExBjH,KAAKJ,MAAMiK,SAAS,IACpB7C,IAAQ8C,OAAO,QACRhI,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAUC,GAAG,mBAVP1G,IAAMC,WAgBrBgH,cACF,SAAAA,EAAYnK,GAAM,IAAAqD,EAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IACd9G,EAAAnD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KAAMJ,KA8BV6E,aA/BkB,eAAAuF,EAAAlK,OAAAuI,EAAA,EAAAvI,CAAAwI,EAAAvG,EAAAwG,KA+BH,SAAA0B,EAAMpF,GAAN,OAAAyD,EAAAvG,EAAA0G,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UACX/D,EAAMf,iBACFb,EAAK0G,eAFE,CAAAO,EAAAtB,KAAA,eAAAsB,EAAAC,OAAA,iBAIXjL,EAAY,YAAa,CACrB2J,SAAY5F,EAAKtC,MAAMkI,SACvBC,SAAY7F,EAAKtC,MAAMmI,WACxBlK,KAAK,SAACC,GACqB,OAAvBA,EAAQ,QACPoE,EAAKrD,MAAMwK,WAAWnH,EAAKtC,MAAMkI,UACjC7B,IAAQgC,IAAI,OAAQ/F,EAAKtC,MAAMkI,UAE/B5F,EAAKrB,SAAS,CAACqH,QAAQ,MAGvBjK,QAAQC,IAAIJ,EAAQ,OACpBoE,EAAKrB,SAAS,CACViH,SAAU,GACVC,SAAU,GACVuB,gBAAiB,GACjBnB,SAAUrK,EAAQ,WApBnB,wBAAAqL,EAAAf,SAAAc,MA/BG,gBAAAK,GAAA,OAAAN,EAAAX,MAAArJ,KAAAsJ,YAAA,GAEdrG,EAAKtC,MAAQ,CACTkI,SAAU,GACVC,SAAU,GACVuB,gBAAiB,GACjBnB,SAAU,GACVD,QAAQ,GAEZhG,EAAKyB,aAAezB,EAAKyB,aAAa5D,KAAlBhB,OAAAiB,EAAA,EAAAjB,CAAAmD,IATNA,8EAad,OAAGjD,KAAKW,MAAMkI,SAASnD,OAAS,GAAK1F,KAAKW,MAAMmI,SAASpD,OAAS,GAAK1F,KAAKW,MAAMmI,WAAa9I,KAAKW,MAAM0J,kBAExE,IAA/BrK,KAAKW,MAAMkI,SAASnD,QAA+C,IAA/B1F,KAAKW,MAAMmI,SAASpD,QAA+C,IAA/B1F,KAAKW,MAAM0J,gBAClFrK,KAAK4B,SAAS,CAACsH,SAAU,8BACnBlJ,KAAKW,MAAMmI,WAAa9I,KAAKW,MAAM0J,gBACzCrK,KAAK4B,SAAS,CAACsH,SAAU,2BACnBlJ,KAAKW,MAAMmI,WAAa9I,KAAKW,MAAM0J,iBACzCrK,KAAK4B,SAAS,CAACsH,SAAU,MAEtB,wCAGEtF,GACT5D,KAAK4B,SAAL9B,OAAAmF,EAAA,EAAAnF,CAAA,GACK8D,EAAEsB,OAAOC,KAAOvB,EAAEsB,OAAOE,yCA+B9B,OAAyB,IAAtBpF,KAAKW,MAAMsI,OACHnH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAUC,GAAG,WAGpB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,cAAcP,UAAU,QAA/B,YACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYjC,KAAKW,MAAMuI,UACpCpH,EAAAC,EAAAC,cAAA,QAAM+D,SAAU/F,KAAKyE,cACjB3C,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,sBAAuBF,EAAAC,EAAAC,cAAA,WAC9BF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOhB,KAAK,WAAWlD,UAAU,OAAOmD,MAAOpF,KAAKW,MAAMkI,SAAU7C,SAAUhG,KAAK0E,aAAcwB,UAAQ,EAACuD,WAAS,IAC/H3H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,sBAAuBF,EAAAC,EAAAC,cAAA,WAC9BF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,WAAWhB,KAAK,WAAWlD,UAAU,OAAOmD,MAAOpF,KAAKW,MAAMmI,SAAU9C,SAAUhG,KAAK0E,aAAcwB,UAAQ,IACzHpE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,8BAA+BF,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,WAAWhB,KAAK,kBAAkBlD,UAAU,OAAOmD,MAAOpF,KAAKW,MAAM0J,gBAAiBrE,SAAUhG,KAAK0E,aAAcwB,UAAQ,IACvIpE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,4BAA4BkE,KAAK,SAASf,MAAM,uBA7E9DtC,IAAMC,WCvFvBwH,mLAEE,OACGzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,wFAAyGH,EAAAC,EAAAC,cAAA,QAAMS,KAAK,MAAMyF,aAAW,aAA5B,gBAAzG,sBACApG,EAAAC,EAAAC,cAAA,2JANKc,IAAMC,mBCSpByH,cACF,SAAAA,EAAY5K,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IACd3K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0K,GAAArK,KAAAH,KAAMJ,KACDe,MAAQ,CACTgB,KAAMqF,IAAQC,IAAI,QAClBC,WAAY,IAEhBrH,EAAK4K,iBAAmB5K,EAAK4K,iBAAiB3J,KAAtBhB,OAAAiB,EAAA,EAAAjB,CAAAD,IANVA,gFASD8B,GACb3B,KAAK4B,SAAS,CAACD,KAAMA,qCAGjB,IAAAsB,EAAAjD,KACE2B,EAAO3B,KAAKW,MAAMgB,KACL3B,KAAKW,MAAMuG,WAG9B,OACApF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAC0I,EAAD,CAAQ/I,KAAMA,IAEdG,EAAAC,EAAAC,cAAA,QAAMS,KAAK,OAAOR,UAAU,aACxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOoB,KAAK,IAAIC,OAAK,EAACC,UAAWN,IACjCzI,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOoB,KAAK,SAASG,OAAQ,SAAClL,GAAD,OAAWkC,EAAAC,EAAAC,cAAC+I,EAAD,CAAMpJ,KAAMA,OACpDG,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOoB,KAAK,UAAUG,OAAQ,SAAClL,GAAD,OAAWkC,EAAAC,EAAAC,cAACgJ,EAAD,CAAOrJ,KAAMA,EAAMoH,QAAS9F,EAAKwH,sBAC1E3I,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOoB,KAAK,aAAaG,OAAQ,SAAClL,GAAD,OAAWkC,EAAAC,EAAAC,cAACiJ,EAAD,CAAUtJ,KAAMA,EAAMyI,WAAYnH,EAAKwH,sBACnF3I,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOoB,KAAK,WAAWG,OAAQ,SAAClL,GAAD,OAAWkC,EAAAC,EAAAC,cAACkJ,EAAD,CAAQvJ,KAAMA,EAAMkI,SAAU5G,EAAKwH,gCA9B/E3H,IAAMC,WAyClBoI,cACF,SAAAA,EAAYvL,GAAO,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmL,GAAArL,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqL,GAAAhL,KAAAH,KACTJ,0EAIN,IAAIwL,EACAC,EAUJ,OATIrL,KAAKJ,MAAM+B,MACX3C,QAAQC,IAAIe,KAAKJ,MAAM+B,MACvByJ,EAAUtJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAA6BjC,KAAKJ,MAAM+B,MAClE0J,EAAWvJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMrJ,UAAU,yBAAyBuH,GAAG,YAA5C,YAEX4B,EAAUtJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMrJ,UAAU,yBAAyBuH,GAAG,WAA5C,SACV6B,EAAWvJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMrJ,UAAU,yBAAyBuH,GAAG,cAA5C,aAIX1H,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMrJ,UAAU,eAAeuH,GAAG,UAC9B1H,EAAAC,EAAAC,cAAA,OAAK+B,IAA8B,8BAA+BC,MAAM,KAAKC,OAAO,KAAKC,IAAI,KAC7FpC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,WAGJH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBkE,KAAK,SAASyB,cAAY,WAAWC,cAAY,yBAAyB0D,gBAAc,wBAAwBC,gBAAc,QAAQtD,aAAW,qBACpLpG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CO,GAAG,yBACjEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVmJ,EACAC,aAhCAvI,IAAMC,WAwDZyH,GAfM1H,IAAMC,UAeZyH,GChGKiB,QACW,cAA7BhF,OAAOiF,SAASC,UAEe,UAA7BlF,OAAOiF,SAASC,UAEhBlF,OAAOiF,SAASC,SAASC,MACvB,2DCTNC,IAASf,OAAQhJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,KAAQxJ,EAAAC,EAAAC,cAAC8J,EAAD,OAAmBnF,SAASoF,eAAe,SDwH9D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtN,KAAK,SAAAuN,GACjCA,EAAaC","file":"static/js/main.dee60ff9.chunk.js","sourcesContent":["\nconst baseURL = \"https://seddit-backend.herokuapp.com/\"  // \"http://127.0.0.1:5000/\";\n\nexport function getRequest(extension){\n    return fetch(baseURL + extension)\n    .then((response) => {\n        return response.json();\n    })\n    .then((myJson) => {\n        console.log(myJson);\n        return myJson;\n    });\n    \n}\n\nexport function postRequest(extension, req_body){\n    return fetch(baseURL + extension, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(req_body)\n    }).then((response) => {\n        return response.json();\n    })\n    .then((myJson) => {\n        console.log(myJson);\n        return myJson;\n    });\n}","import React from 'react';\nimport { getRequest, postRequest } from './requests.js';\nimport {BarLoader} from 'react-spinners';\n\nclass Post extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            commenting: false\n        }\n        this.toggleComment = this.toggleComment.bind(this);\n    }\n\n    isToday = (someDate) => {\n        const today = new Date()\n        return someDate.getDate() === today.getDate() &&\n          someDate.getMonth() === today.getMonth() &&\n          someDate.getFullYear() === today.getFullYear()\n    }\n\n    formatDate(date){\n        date = new Date(date);\n        date = new Date(date.getTime() - date.getTimezoneOffset()*60000);\n        if(this.isToday(date)){\n            return date.toLocaleTimeString('en-US', {hour12: true, hour: \"numeric\", minute: \"numeric\"})\n        }\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    }\n\n    toggleComment(){\n        if(this.props.user)\n            this.setState({commenting: !this.state.commenting});\n        else\n            alert('Please login');\n    }\n\n    render(){\n        return (\n            <div className=\"card my-4 mx-md-3\">\n                <p className=\"card-header\">{this.props.author} <span className=\"text-muted ml-3\">{this.formatDate(this.props.created)}</span></p>\n                <div className=\"card-body\">\n                    <h2 className=\"card-title\">{this.props.title}</h2>\n                    <p className=\"card-text\">{this.props.body}</p>\n                    <Like post_id={this.props.id} user={this.props.user} />  \n                    <a role=\"button\" className=\"btn btn-light card-link\" onClick={this.toggleComment}>Comment</a>\n                </div>\n                <div className=\"card-footer\">\n                    <Comment post_id={this.props.id} user={this.props.user} sendComment={this.state.commenting} toggleView={this.toggleComment} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Like extends React.Component{\n    constructor(props){ \n        super(props);\n        // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n        this.state = {\n            likes: null,\n            liked: null\n        };\n        this.getLikes = this.getLikes.bind(this);\n        this.isLiked = this.isLiked.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        \n    }\n    componentDidMount = () => {\n        this.getLikes();\n        this.isLiked();\n\n        this.interval = setInterval(() => {\n            this.getLikes();\n        }, 30000);\n    }\n    getLikes(){\n        getRequest(\"like/\"+this.props.post_id+'/').then((response) => {\n            this.setState({likes: response['likes']})\n        });\n    }\n    isLiked(){\n        if(this.props.user){\n            postRequest('isliked/', {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                this.setState({liked: response['liked']});\n            });\n        } else{\n            this.setState({liked: false});\n        }\n    }\n    handleClick(e){\n        e.preventDefault();\n\n        if(!this.props.user){\n            alert('Please login');\n            return;\n        }\n\n        if(this.state.liked){ // send unlike\n            postRequest(\"unlike/\", {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                if(response['status'] === 'OK'){\n                    this.setState({\n                        likes: this.state.likes - 1,\n                        liked: false\n                    });\n                }\n                    \n            });\n        } else{ // send like\n            postRequest(\"like/\" + this.props.post_id + '/', \n                {\"user\": this.props.user, \"post_id\": this.props.post_id}\n            ).then((response) => {\n                if(response['status'] === 'OK')\n                    this.setState({\n                        likes: this.state.likes + 1,\n                        liked: true\n                    });\n            });\n        }\n    }\n    render(){\n        return(\n            <a role=\"button\" className=\"btn btn-outline-light card-link\" onClick={this.handleClick}>\n                {this.state.liked ? \n                <img src={process.env.PUBLIC_URL + '/images/like-color.svg'} width=\"45\" height=\"30\" alt=\"\" /> :\n                <img src={process.env.PUBLIC_URL + '/images/like-gray.svg'} width=\"45\" height=\"30\" alt=\"\" /> }\n                <span className=\"ml-1\">{this.state.likes}</span>\n            </a>\n        );\n    }\n}\n\nclass Comment extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            rows: 1,\n            body: \"\",\n            comments: null\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentDidMount(){\n        getRequest('allcomments/' + this.props.post_id + '/').then((response) => {\n            const commentsRes = response['comments'];\n            this.setState({comments: commentsRes})\n        });\n\n        this.interval = setInterval(() => {\n            getRequest('allcomments/' + this.props.post_id + '/').then((response) => {\n                const commentsRes = response['comments'];\n                this.setState({comments: commentsRes})\n            });\n        }, 30000);\n    }\n    handleSubmit(event){\n        event.preventDefault();\n\n        if(!this.props.user){\n            alert('Please login');\n            return;\n        }\n\n        postRequest('allcomments/' + this.props.post_id + '/', \n            {\"user\": this.props.user, \"body\": this.state.body}\n        ).then((response) => {\n            var comment = response['comment'];\n            this.setState({comments: this.state.comments.concat({\n                    \"user\": comment['user'], \"body\": comment['body'], \"id\": comment['id']\n                })\n            });\n        });\n\n        this.props.toggleView();\n    }\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    render(){\n            if(this.state.comments == null){\n                return <BarLoader\n                    sizeUnit={\"px\"}\n                    size={40}\n                    loading={this.isLoading()}\n                />\n            }\n            var displayComments;\n            // console.log(this.state.comments);\n            if(this.state.comments.length > 0){\n                displayComments = this.state.comments.map((comment, idx) =>\n                    <div className=\"comment\" key={comment['id']}>\n                        <p><b>{comment['user']}:</b> {comment['body']}</p>\n                    </div>\n                );\n            } else {\n                displayComments = (\n                    <p className=\"text-muted\">No comments!</p>\n                );\n            }\n            var typeComment = this.props.sendComment ? \n                <div className=\"mb-3\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row\">\n                        <div className=\"w-75 col-auto\">\n                        <textarea className=\"form-control\" name=\"body\" rows={this.state.rows} onChange={this.handleChange} placeholder=\"Comment\" required ></textarea>\n                        </div>\n                        <div className=\"w-25 col-auto\">\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Send\" />\n                        </div>\n                    </div>\n                </form>\n                </div>\n                : \"\";\n            return(\n                <div>\n                    {typeComment}\n                    {displayComments}\n                </div>\n            );\n        \n    }\n}\n\nexport default Post;","import React from 'react';\nimport {BarLoader} from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport Post from './Post.js';\nimport { getRequest, postRequest } from './requests.js';\n\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: null,\n            title: '',\n            body: '',\n            length: 0,\n            page: 0\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n        window.onscroll = () => {\n            // console.log(window.innerHeight + document.documentElement.scrollTop + ' ' + document.documentElement.offsetHeight)\n            if(document.documentElement.offsetHeight - (window.innerHeight + document.documentElement.scrollTop) <= 400){\n                this.loadPosts();\n            }\n        }\n    }\n\n    componentWillMount = () => {\n        getRequest('feed/0/').then((response) => {\n            this.setState({posts: response['feed']});\n        });\n    }\n\n    componentDidMount = () => {\n        // getRequest('feed/0/').then((response) => {\n        //     this.setState({posts: response['feed']});\n        // });\n\n        // this.interval = setInterval(() => {\n        //     getRequest('feed/0/').then((response) => {\n        //         this.setState({posts: response['feed']});\n        //     });\n        // }, 60000);\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n            length: e.target.value.length\n        });\n    }\n\n    loadPosts = () => {\n        this.setState({page: this.state.page + 1});\n        getRequest('feed/' + this.state.page + '/').then((response) => {\n            this.setState({posts: this.state.posts.concat(response['feed'])});\n        });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.state.length < 280){\n            alert(\"Posts must be at least 280 characters long.\");\n            return;\n        }\n        postRequest('post/', {\n            \"user\": Cookies.get('user'),\n            \"auth_token\": Cookies.get('auth_token'),\n            \"title\": this.state.title,\n            \"body\": this.state.body\n        }).then((response) => {\n            var post = response['post'];\n            var newPosts = this.state.posts.slice();\n            newPosts.unshift(post);\n            this.setState({posts: newPosts});\n        });\n        $(\"#closeModal\").click();\n    }\n\n    render(){\n        var feedItems;\n        if(this.state.posts == null){\n            return <BarLoader\n              sizeUnit={\"px\"}\n              size={40}\n              loading={this.isLoading()}\n            />\n        }\n        else if(this.state.posts.length === 0){\n            feedItems = <div>No posts yet!</div>;\n        }\n        else{\n            feedItems = this.state.posts.map((post, idx) =>\n                <Post key={post['id']} id={post['id']} user={this.props.user} author={post['author']} title={post['title']} body={post['body']} created={post['created']} likes={post['likes']} /> \n            );\n        }\n        \n        const writePostBtn = this.props.user ? <button className=\"btn btn-primary btn-lg\" id=\"write-post\" type=\"button\" data-toggle=\"modal\" data-target=\"#write-post-modal\">Write Post</button> : \"\";\n        \n        return (\n            <div className=\"mx-sm-5\">\n            <div className=\"mx-md-5\">\n                {feedItems}\n                {writePostBtn}        \n\n                <div className=\"modal fade\" id=\"write-post-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Compose</h5>\n                        <button type=\"button\" id=\"closeModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"modal-body\">\n                            <input id=\"title\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"What's on your mind?\" value={this.state.title} onChange={this.handleChange} required /><br />\n                            <textarea id=\"body\" className=\"form-control\" type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} required />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <span>{this.state.length}</span>\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Post!\" />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n            </div>            \n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { getRequest, postRequest } from './requests';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errorMsg: \"\",\n            toFeed: false\n        };\n    }\n    \n    validateForm(){\n        return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n    \n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleSubmit = async event => {\n        event.preventDefault();\n        postRequest('login/', {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }).then((myJson) => {\n            if(myJson['status'] === \"OK\"){                \n                this.props.onLogin(this.state.username);\n\n                Cookies.set('user', this.state.username);\n                Cookies.set('auth_token', myJson['auth_token']);\n\n                this.setState({toFeed: true});\n            }\n            else{\n                console.log(myJson['error']);\n                this.setState({\n                    password: \"\",\n                    errorMsg: myJson['error']\n                })\n            }\n        });\n    }\n\n    render(){\n        if(this.state.toFeed === true){\n            return <Redirect to=\"/feed/\" />; // when using render with react router, you can use Redirect\n        }\n        return(\n            <div className=\"row\">\n                <div className=\"col-sm-3 mx-auto\">\n                    <h1 id=\"auth-header\" className=\"my-4\">Login</h1>\n                    <div className=\"errorMsg\">{this.state.errorMsg}</div>\n                    <form onSubmit={this.handleSubmit}>\n                        <label><b>Username</b></label><br />\n                        <input type=\"text\" name=\"username\" className=\"mb-2\" value={this.state.username} onChange={this.handleChange} required autoFocus />\n                        <br />\n                        <label><b>Password</b></label><br />\n                        <input type=\"password\" name=\"password\" className=\"mb-2\" value={this.state.password} onChange={this.handleChange} required />\n                        <br />\n                        <input className=\"btn btn-primary btn-block\" type=\"submit\" disabled={!this.validateForm()} value=\"Login\" />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        postRequest('logout/', {\n            \"user\": Cookies.get('user')\n        });\n        this.props.onLogout(\"\"); // reset username\n        Cookies.remove('user');\n        return <Redirect to=\"/login/\" />;\n    }\n}\n\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errorMsg: \"\",\n            toFeed: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    validateForm(){\n        if(this.state.username.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword)\n            return true;\n        if(this.state.username.length === 0 || this.state.password.length === 0 || this.state.confirmPassword === 0){\n            this.setState({errorMsg: \"All fields not filled out\"});\n        } else if(this.state.password !== this.state.confirmPassword){\n            this.setState({errorMsg: \"Passwords do not match\"});\n        } else if(this.state.password === this.state.confirmPassword){\n            this.setState({errorMsg: \"\"});\n        }\n        return false;\n    }\n    \n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        if(!this.validateForm()) return;\n\n        postRequest('register/', {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }).then((response) => {\n            if(response['status'] === \"OK\"){\n                this.props.onRegister(this.state.username);\n                Cookies.set('user', this.state.username);\n                // this.props.history.push(\"/feed/\");\n                this.setState({toFeed: true});\n            }\n            else{\n                console.log(response['error']);\n                this.setState({\n                    username: \"\",\n                    password: \"\",\n                    confirmPassword: \"\",\n                    errorMsg: response['error']\n                })\n            }\n        });\n    }\n\n    render(){\n        if(this.state.toFeed === true){\n            return <Redirect to=\"/feed/\" />; // when using render with react router, you can use Redirect\n        }\n        return(\n            <div className=\"row\">\n                <div className=\" col-sm-3 mx-auto\">\n                <h1 id=\"auth-header\" className=\"my-4\">Register</h1>\n                <p className=\"errorMsg\">{this.state.errorMsg}</p>\n                <form onSubmit={this.handleSubmit}>\n                    <label><b>Username</b></label><br />\n                    <input type=\"text\" name=\"username\" className=\"mb-2\" value={this.state.username} onChange={this.handleChange} required autoFocus />\n                    <br />\n                    <label><b>Password</b></label><br />\n                    <input type=\"password\" name=\"password\" className=\"mb-2\" value={this.state.password} onChange={this.handleChange} required />\n                    <br />\n                    <label><b>Confirm Password</b></label><br />\n                    <input type=\"password\" name=\"confirmPassword\" className=\"mb-2\" value={this.state.confirmPassword} onChange={this.handleChange} required />\n                    <br />\n                    <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"Register\" />\n                </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Login, Logout, Register};","import React from 'react';\n\nclass About extends React.Component{\n    render(){\n        return (\n           <div className=\"jumbotron mt-3\">\n               <h1>Welcome to Seddit!</h1>\n               <p className=\"lead\">The social media site for thoughtful discussion. The character MINIMUM, not maximum (<span role=\"img\" aria-label=\"eye emoji\">👀</span> Twitter), is 280.</p>\n               <p>Please navigate to the links in the header to register or login. If you run into any bugs or glitches, please contact Aaron Gu. Enjoy!</p>\n           </div> \n        );\n    }\n}\n\nexport {About};","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport Feed from './Feed.js';\nimport {Login, Logout, Register} from './Auth.js';\nimport {About} from './About.js';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            user: Cookies.get('user'),\n            auth_token: ''\n        }\n        this.handleUserChange = this.handleUserChange.bind(this);\n    }\n    \n    handleUserChange(user){\n        this.setState({user: user});\n    }\n\n    render(){\n        const user = this.state.user;\n        const auth_token = this.state.auth_token;\n\n\n        return (\n        <div className=\"App\">\n\n            <Header user={user} />\n\n            <main role=\"main\" className=\"container\">\n                <div className=\"content\">\n                    <Route path=\"/\" exact component={About} />\n                    <Route path=\"/feed/\" render={(props) => <Feed user={user} />} />\n                    <Route path=\"/login/\" render={(props) => <Login user={user} onLogin={this.handleUserChange} />} />\n                    <Route path=\"/register/\" render={(props) => <Register user={user} onRegister={this.handleUserChange} />} />\n                    <Route path=\"/logout/\" render={(props) => <Logout user={user} onLogout={this.handleUserChange} />} />\n                </div>\n            </main>\n\n            {/* <Footer /> */}\n\n        </div>\n        );\n    }\n}\n\nclass Header extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        var leftnav;\n        var rightnav;\n        if (this.props.user) {\n            console.log(this.props.user);\n            leftnav = <span className=\"nav-item navbar-text mx-2\">{this.props.user}</span>;\n            rightnav = <Link className=\"nav-item nav-link mx-2\" to=\"/logout/\">Logout</Link>;\n        } else { // this.props.user !== \"\" || this.props.user !== 'null' || this.props.user !== 'undefined'\n            leftnav = <Link className=\"nav-item nav-link mx-2\" to=\"/login/\">Login</Link>;\n            rightnav = <Link className=\"nav-item nav-link mx-2\" to=\"/register/\">Register</Link>;\n        } \n\n        return (\n            <header>\n            <nav className=\"navbar navbar-expand-md navbar-light\">\n                <Link className=\"navbar-brand\" to=\"/feed/\">\n                    <img src={process.env.PUBLIC_URL + '/images/megaphone-white.svg'} width=\"35\" height=\"35\" alt=\"\" />\n                    <span className=\"ml-2\">Seddit</span>\n                </Link>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarsExampleDefault\">\n                <div className=\"navbar-nav\">\n                    {leftnav}\n                    {rightnav}\n                </div> \n                </div>\n            </nav>\n            </header>\n        );\n    }\n}\n\nclass Footer extends React.Component{\n    render(){\n        return(\n            <footer className=\"footer\">\n                <div className=\"container\">\n                    <nav className=\"navbar navbar-default\">\n                        <span className=\"navbar-link\"><Link to=\"/about/\">Why Seddit, and why over 500 characters is better</Link></span>\n                        <span className=\"navbar-text text-muted\">{String.fromCharCode(\"0169\")} Aaron Gu 2019</span>\n                    </nav>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default App;\nexport {Header, Footer};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render((<Router><App /></Router>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}