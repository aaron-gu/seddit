{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js\";\nimport React from 'react';\nimport { BarLoader } from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch('http://127.0.0.1:5000/feed/').then(response => {\n        return response.json();\n      }).then(myJson => {\n        //console.log(JSON.stringify(myJson));\n        this.setState({\n          posts: myJson\n        });\n      });\n    };\n\n    this.isLoading = () => {\n      return this.state.posts == null;\n    };\n\n    this.isToday = someDate => {\n      const today = new Date();\n      return someDate.getDate() == today.getDate() && someDate.getMonth() == today.getMonth() && someDate.getFullYear() == today.getFullYear();\n    };\n\n    this.state = {\n      posts: null,\n      title: '',\n      body: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // componentWillUnmount(){\n  // }\n  // tick(){\n  //     this.setState({\n  //         last_updated: new Date()\n  //     });\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://127.0.0.1:5000/post/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": Cookies.get('user'),\n        \"auth_token\": Cookies.get('auth_token'),\n        \"title\": this.state.title,\n        \"body\": this.state.body\n      })\n    }).then(response => {\n      return response.json();\n    }).then(myJson => {\n      console.log(JSON.stringify(myJson));\n    });\n    $(\"#closeModal\").click();\n  }\n\n  formatDate(date) {\n    date = new Date(date);\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n\n    if (this.isToday(date)) {\n      return date.toLocaleTimeString('en-US', {\n        hour12: true,\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n    }\n\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n\n  render() {\n    if (this.state.posts == null) {\n      return React.createElement(BarLoader, {\n        sizeUnit: \"px\",\n        size: 40,\n        loading: this.isLoading(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n\n    const feedItems = this.state.posts['feed'].map((post, idx) => React.createElement(\"div\", {\n      key: idx,\n      className: \"card my-4 mx-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, post['author'], \" \", React.createElement(\"span\", {\n      className: \"text-muted ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.formatDate(post['created']))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, post['title']), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, post['body']), React.createElement(Like, {\n      className: \"card-link\",\n      likes: post['likes'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))));\n    const writePostBtn = this.props.user ? React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg\",\n      id: \"write-post\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#write-post-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Write Post\") : \"\";\n    return React.createElement(\"div\", {\n      className: \"mx-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, feedItems, writePostBtn, React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"write-post-modal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLongTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLongTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Compose\"), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"closeModal\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"What's on your mind?\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"body\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Post!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nclass Like extends React.Component {\n  constructor(props) {\n    super(props); // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n\n    this.state = {\n      likes: 0\n    };\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    console.log('liked');\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Likes: \", this.props.likes);\n  }\n\n}\n\nexport { Feed };","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js"],"names":["React","BarLoader","Cookies","$","Feed","Component","constructor","props","componentDidMount","fetch","then","response","json","myJson","setState","posts","isLoading","state","isToday","someDate","today","Date","getDate","getMonth","getFullYear","title","body","handleSubmit","bind","handleChange","formatDate","e","target","name","value","event","preventDefault","method","headers","JSON","stringify","get","console","log","click","date","getTime","getTimezoneOffset","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","year","month","day","render","feedItems","map","post","idx","writePostBtn","user","Like","likes","handleClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BarLoader} from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\n\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: null,\n            title: '',\n            body: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    componentDidMount = () => {\n        fetch('http://127.0.0.1:5000/feed/')\n            .then((response) => {\n                return response.json();\n            })\n            .then((myJson) => {\n                //console.log(JSON.stringify(myJson));\n                this.setState({\n                    posts: myJson\n                }) \n        });\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    // componentWillUnmount(){\n\n    // }\n\n    // tick(){\n\n    //     this.setState({\n    //         last_updated: new Date()\n    //     });\n    // }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch('http://127.0.0.1:5000/post/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"user\": Cookies.get('user'),\n                \"auth_token\": Cookies.get('auth_token'),\n                \"title\": this.state.title,\n                \"body\": this.state.body\n            })\n        }).then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            console.log(JSON.stringify(myJson));\n        });\n        $(\"#closeModal\").click();\n    }\n\n    isToday = (someDate) => {\n        const today = new Date()\n        return someDate.getDate() == today.getDate() &&\n          someDate.getMonth() == today.getMonth() &&\n          someDate.getFullYear() == today.getFullYear()\n    }\n\n    formatDate(date){\n        date = new Date(date);\n        date = new Date(date.getTime() - date.getTimezoneOffset()*60000);\n        if(this.isToday(date)){\n            return date.toLocaleTimeString('en-US', {hour12: true, hour: \"numeric\", minute: \"numeric\"})\n        }\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    }\n\n    render(){\n        if(this.state.posts == null){\n            return <BarLoader\n              sizeUnit={\"px\"}\n              size={40}\n              loading={this.isLoading()}\n            />\n        }\n        const feedItems = this.state.posts['feed'].map((post, idx) =>\n            <div key={idx} className=\"card my-4 mx-md-3\">\n                <p className=\"card-header\">{post['author']} <span className=\"text-muted ml-3\">{this.formatDate(post['created'])}</span></p>\n                <div className=\"card-body\">\n                    <h1 className=\"card-title\">{post['title']}</h1>\n                    <div className=\"card-text\">{post['body']}</div>\n                    <Like className=\"card-link\" likes={post['likes']} />\n                </div>\n            </div>\n        );\n        \n        const writePostBtn = this.props.user ? <button className=\"btn btn-primary btn-lg\" id=\"write-post\" type=\"button\" data-toggle=\"modal\" data-target=\"#write-post-modal\">Write Post</button> : \"\";\n        \n        return (\n            <div className=\"mx-sm-5\">\n                <div className=\"mx-md-5\">\n                {feedItems}\n                {writePostBtn}        \n\n                <div className=\"modal fade\" id=\"write-post-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Compose</h5>\n                        <button type=\"button\" id=\"closeModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"modal-body\">\n                            <input id=\"title\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"What's on your mind?\" value={this.state.title} onChange={this.handleChange} required /><br />\n                            <textarea id=\"body\" className=\"form-control\" type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} required />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Post!\" />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n                </div>            \n            </div>\n        );\n    }\n}\n\nclass Like extends React.Component{\n    constructor(props){ \n        super(props);\n        // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n        this.state = {likes: 0};\n    }\n    handleClick(e){\n        e.preventDefault();\n        console.log('liked');\n    }\n    render(){\n        return(\n            <a href=\"#\" onClick={this.handleClick}>\n                Likes: {this.props.likes}\n            </a>\n        );\n    }\n}\n\nexport {Feed};"]},"metadata":{},"sourceType":"module"}