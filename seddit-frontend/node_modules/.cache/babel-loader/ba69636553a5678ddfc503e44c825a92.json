{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js\";\nimport React from 'react';\nimport { BarLoader } from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch('http://127.0.0.1:5000/feed/').then(response => {\n        return response.json();\n      }).then(myJson => {\n        //console.log(JSON.stringify(myJson));\n        this.setState({\n          posts: myJson\n        });\n      });\n    };\n\n    this.isLoading = () => {\n      return this.state.posts == null;\n    };\n\n    this.state = {\n      posts: null,\n      title: '',\n      body: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // componentWillUnmount(){\n  // }\n  // tick(){\n  //     this.setState({\n  //         last_updated: new Date()\n  //     });\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://127.0.0.1:5000/post/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": Cookies.get('user'),\n        \"auth_token\": Cookies.get('auth_token'),\n        \"title\": this.state.title,\n        \"body\": this.state.body\n      })\n    }).then(response => {\n      return response.json();\n    }).then(myJson => {\n      console.log(JSON.stringify(myJson));\n    });\n    $(\"#closeModal\").click();\n  }\n\n  render() {\n    if (this.state.posts == null) {\n      return React.createElement(BarLoader, {\n        sizeUnit: \"px\",\n        size: 40,\n        loading: this.isLoading(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n\n    const feedItems = this.state.posts['feed'].map((post, idx) => React.createElement(\"div\", {\n      key: idx,\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, post['title']), React.createElement(\"h3\", {\n      className: \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, post['author']), React.createElement(\"h4\", {\n      className: \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, post['created']), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, post['body']), React.createElement(Like, {\n      className: \"card-link\",\n      likes: post['likes'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, feedItems, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg\",\n      id: \"write-post\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#write-post-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Write Post\"), React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"write-post-modal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLongTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLongTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Compose\"), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"closeModal\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"What's on your mind?\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"body\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Post!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nclass Like extends React.Component {\n  constructor(props) {\n    super(props); // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n\n    this.state = {\n      likes: 0\n    };\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    console.log('liked');\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Likes: \", this.props.likes);\n  }\n\n}\n\nexport { Feed };","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js"],"names":["React","BarLoader","Cookies","$","Feed","Component","constructor","props","componentDidMount","fetch","then","response","json","myJson","setState","posts","isLoading","state","title","body","handleSubmit","bind","handleChange","e","target","name","value","event","preventDefault","method","headers","JSON","stringify","get","console","log","click","render","feedItems","map","post","idx","Like","likes","handleClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BarLoader} from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\n\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: null,\n            title: '',\n            body: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount = () => {\n        fetch('http://127.0.0.1:5000/feed/')\n            .then((response) => {\n                return response.json();\n            })\n            .then((myJson) => {\n                //console.log(JSON.stringify(myJson));\n                this.setState({\n                    posts: myJson\n                }) \n        });\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    // componentWillUnmount(){\n\n    // }\n\n    // tick(){\n\n    //     this.setState({\n    //         last_updated: new Date()\n    //     });\n    // }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch('http://127.0.0.1:5000/post/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"user\": Cookies.get('user'),\n                \"auth_token\": Cookies.get('auth_token'),\n                \"title\": this.state.title,\n                \"body\": this.state.body\n            })\n        }).then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            console.log(JSON.stringify(myJson));\n        });\n        $(\"#closeModal\").click();\n    }\n\n    render(){\n        if(this.state.posts == null){\n            return <BarLoader\n              sizeUnit={\"px\"}\n              size={40}\n              loading={this.isLoading()}\n            />\n        }\n        const feedItems = this.state.posts['feed'].map((post, idx) =>\n            <div key={idx} className=\"card\">\n\n                <h1 className=\"card-title\">{post['title']}</h1>\n                <h3 className=\"card-subtitle text-muted\">{post['author']}</h3>\n                <h4 className=\"card-subtitle text-muted\">{post['created']}</h4>\n                <div className=\"card-body\">{post['body']}</div>\n                <Like className=\"card-link\" likes={post['likes']} />\n            </div>\n        );\n        \n        return (\n            <div>\n                {feedItems}\n                <button className=\"btn btn-primary btn-lg\" id=\"write-post\" type=\"button\" data-toggle=\"modal\" data-target=\"#write-post-modal\">Write Post</button>\n\n                <div className=\"modal fade\" id=\"write-post-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Compose</h5>\n                        <button type=\"button\" id=\"closeModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"modal-body\">\n                            <input id=\"title\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"What's on your mind?\" value={this.state.title} onChange={this.handleChange} /><br />\n                            <textarea id=\"body\" className=\"form-control\" type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"modal-footer\">\n                            {/* <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button> */}\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Post!\" />\n                        </div>\n                    </form>\n                    </div>\n                    \n                </div>\n                </div>                \n            </div>\n        );\n    }\n}\n\nclass Like extends React.Component{\n    constructor(props){ \n        super(props);\n        // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n        this.state = {likes: 0};\n    }\n    handleClick(e){\n        e.preventDefault();\n        console.log('liked');\n    }\n    render(){\n        return(\n            <a href=\"#\" onClick={this.handleClick}>\n                Likes: {this.props.likes}\n            </a>\n        );\n    }\n}\n\nexport {Feed};"]},"metadata":{},"sourceType":"module"}