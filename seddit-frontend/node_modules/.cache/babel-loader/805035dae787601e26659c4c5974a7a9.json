{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Post.js\";\nimport React from 'react';\nimport { getRequest, postRequest } from './requests.js';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isToday = someDate => {\n      const today = new Date();\n      return someDate.getDate() === today.getDate() && someDate.getMonth() === today.getMonth() && someDate.getFullYear() === today.getFullYear();\n    };\n  }\n\n  formatDate(date) {\n    date = new Date(date);\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n\n    if (this.isToday(date)) {\n      return date.toLocaleTimeString('en-US', {\n        hour12: true,\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n    }\n\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card my-4 mx-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.author, \" \", React.createElement(\"span\", {\n      className: \"text-muted ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.formatDate(this.props.created))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.body), React.createElement(Like, {\n      post_id: this.props.id,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      role: \"button\",\n      className: \"btn btn-light card-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Comment\")), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Comment, {\n      post_id: this.props.id,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Like extends React.Component {\n  constructor(props) {\n    super(props); // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n\n    this.componentDidMount = () => {\n      this.getLikes();\n      this.isLiked();\n    };\n\n    this.state = {\n      likes: null,\n      liked: null\n    };\n    this.getLikes = this.getLikes.bind(this);\n    this.isLiked = this.isLiked.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  getLikes() {\n    getRequest(\"like/\" + this.props.post_id + '/').then(response => {\n      this.setState({\n        likes: response['likes']\n      });\n    });\n  }\n\n  isLiked() {\n    if (this.props.user) {\n      postRequest('isliked/', {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        this.setState({\n          liked: response['liked']\n        });\n      });\n    } else {\n      this.setState({\n        liked: false\n      });\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    if (!this.props.user) {\n      alert('Please login');\n      return;\n    }\n\n    if (this.state.liked) {\n      // send unlike\n      postRequest(\"unlike/\", {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        if (response['status'] === 'OK') {\n          this.setState({\n            likes: this.state.likes - 1,\n            liked: false\n          });\n        }\n      });\n    } else {\n      // send like\n      postRequest(\"like/\" + this.props.post_id + '/', {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        if (response['status'] === 'OK') this.setState({\n          likes: this.state.likes + 1,\n          liked: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      role: \"button\",\n      className: \"btn btn-outline-light card-link\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.liked ? React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/images/like-color.svg',\n      width: \"45\",\n      height: \"30\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/images/like-gray.svg',\n      width: \"45\",\n      height: \"30\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ml-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.likes));\n  }\n\n}\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: 1,\n      body: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.props.user);\n    postRequest('allcomments/' + this.props.post_id + '/', {\n      \"user\": this.props.user,\n      \"body\": this.state.body\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-75 col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"body\",\n      rows: this.state.rows,\n      onChange: this.handleChange,\n      placeholder: \"Comment\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"w-25 col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-secondary\",\n      value: \"Send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Post.js"],"names":["React","getRequest","postRequest","Post","Component","constructor","props","isToday","someDate","today","Date","getDate","getMonth","getFullYear","formatDate","date","getTime","getTimezoneOffset","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","year","month","day","render","author","created","title","body","id","user","Like","componentDidMount","getLikes","isLiked","state","likes","liked","bind","handleClick","post_id","then","response","setState","e","preventDefault","alert","process","env","PUBLIC_URL","Comment","rows","handleSubmit","handleChange","event","console","log","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAKlBC,OALkB,GAKPC,QAAD,IAAc;AACpB,YAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,aAAOF,QAAQ,CAACG,OAAT,OAAuBF,KAAK,CAACE,OAAN,EAAvB,IACLH,QAAQ,CAACI,QAAT,OAAwBH,KAAK,CAACG,QAAN,EADnB,IAELJ,QAAQ,CAACK,WAAT,OAA2BJ,KAAK,CAACI,WAAN,EAF7B;AAGH,KAViB;AAGjB;;AASDC,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZA,IAAAA,IAAI,GAAG,IAAIL,IAAJ,CAASK,IAAT,CAAP;AACAA,IAAAA,IAAI,GAAG,IAAIL,IAAJ,CAASK,IAAI,CAACC,OAAL,KAAiBD,IAAI,CAACE,iBAAL,KAAyB,KAAnD,CAAP;;AACA,QAAG,KAAKV,OAAL,CAAaQ,IAAb,CAAH,EAAsB;AAClB,aAAOA,IAAI,CAACG,kBAAL,CAAwB,OAAxB,EAAiC;AAACC,QAAAA,MAAM,EAAE,IAAT;AAAeC,QAAAA,IAAI,EAAE,SAArB;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OAAjC,CAAP;AACH;;AACD,WAAON,IAAI,CAACO,kBAAL,CAAwB,OAAxB,EAAiC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAAjC,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKpB,KAAL,CAAWqB,MAAvC,OAA+C;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKb,UAAL,CAAgB,KAAKR,KAAL,CAAWsB,OAA3B,CAAnC,CAA/C,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKtB,KAAL,CAAWuB,KAAvC,CADJ,EAEI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKvB,KAAL,CAAWwB,IAArC,CAFJ,EAGI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWyB,EAA1B;AAA8B,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAW0B,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAG,MAAA,IAAI,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,yBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAFJ,EAQI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWyB,EAA7B;AAAiC,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAW0B,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ;AAcH;;AArC6B;;AAwClC,MAAMC,IAAN,SAAmBjC,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AAFc,SAYlB4B,iBAZkB,GAYE,MAAM;AACtB,WAAKC,QAAL;AACA,WAAKC,OAAL;AACH,KAfiB;;AAGd,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKJ,QAAL,GAAgB,KAAKA,QAAL,CAAcK,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKJ,OAAL,GAAe,KAAKA,OAAL,CAAaI,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AAEH;;AAKDL,EAAAA,QAAQ,GAAE;AACNlC,IAAAA,UAAU,CAAC,UAAQ,KAAKK,KAAL,CAAWoC,OAAnB,GAA2B,GAA5B,CAAV,CAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1D,WAAKC,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEM,QAAQ,CAAC,OAAD;AAAhB,OAAd;AACH,KAFD;AAGH;;AACDR,EAAAA,OAAO,GAAE;AACL,QAAG,KAAK9B,KAAL,CAAW0B,IAAd,EAAmB;AACf9B,MAAAA,WAAW,CAAC,UAAD,EAAa;AAAC,gBAAQ,KAAKI,KAAL,CAAW0B,IAApB;AAA0B,mBAAW,KAAK1B,KAAL,CAAWoC;AAAhD,OAAb,CAAX,CAAkFC,IAAlF,CAAwFC,QAAD,IAAc;AACjG,aAAKC,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAEK,QAAQ,CAAC,OAAD;AAAhB,SAAd;AACH,OAFD;AAGH,KAJD,MAIM;AACF,WAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH;AACJ;;AACDE,EAAAA,WAAW,CAACK,CAAD,EAAG;AACVA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,CAAC,KAAKzC,KAAL,CAAW0B,IAAf,EAAoB;AAChBgB,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACH;;AAED,QAAG,KAAKX,KAAL,CAAWE,KAAd,EAAoB;AAAE;AAClBrC,MAAAA,WAAW,CAAC,SAAD,EAAY;AAAC,gBAAQ,KAAKI,KAAL,CAAW0B,IAApB;AAA0B,mBAAW,KAAK1B,KAAL,CAAWoC;AAAhD,OAAZ,CAAX,CAAiFC,IAAjF,CAAuFC,QAAD,IAAc;AAChG,YAAGA,QAAQ,CAAC,QAAD,CAAR,KAAuB,IAA1B,EAA+B;AAC3B,eAAKC,QAAL,CAAc;AACVP,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CADhB;AAEVC,YAAAA,KAAK,EAAE;AAFG,WAAd;AAIH;AAEJ,OARD;AAUH,KAXD,MAWM;AAAE;AACJrC,MAAAA,WAAW,CAAC,UAAU,KAAKI,KAAL,CAAWoC,OAArB,GAA+B,GAAhC,EACP;AAAC,gBAAQ,KAAKpC,KAAL,CAAW0B,IAApB;AAA0B,mBAAW,KAAK1B,KAAL,CAAWoC;AAAhD,OADO,CAAX,CAEEC,IAFF,CAEQC,QAAD,IAAc;AACjB,YAAGA,QAAQ,CAAC,QAAD,CAAR,KAAuB,IAA1B,EACI,KAAKC,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CADhB;AAEVC,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIP,OARD;AASH;AACJ;;AACDb,EAAAA,MAAM,GAAE;AACJ,WACI;AAAG,MAAA,IAAI,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,iCAA3B;AAA6D,MAAA,OAAO,EAAE,KAAKe,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWE,KAAX,GACD;AAAK,MAAA,GAAG,EAAEU,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,wBAAnC;AAA6D,MAAA,KAAK,EAAC,IAAnE;AAAwE,MAAA,MAAM,EAAC,IAA/E;AAAoF,MAAA,GAAG,EAAC,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAED;AAAK,MAAA,GAAG,EAAEF,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,uBAAnC;AAA4D,MAAA,KAAK,EAAC,IAAlE;AAAuE,MAAA,MAAM,EAAC,IAA9E;AAAmF,MAAA,GAAG,EAAC,EAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKd,KAAL,CAAWC,KAAnC,CAJJ,CADJ;AAQH;;AAvE6B;;AA0ElC,MAAMc,OAAN,SAAsBpD,KAAK,CAACI,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAK+B,KAAL,GAAa;AACTgB,MAAAA,IAAI,EAAE,CADG;AAETvB,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKwB,YAAL,GAAoB,KAAKA,YAAL,CAAkBd,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKe,YAAL,GAAoB,KAAKA,YAAL,CAAkBf,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDc,EAAAA,YAAY,CAACE,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACT,cAAN;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpD,KAAL,CAAW0B,IAAvB;AACA9B,IAAAA,WAAW,CAAC,iBAAiB,KAAKI,KAAL,CAAWoC,OAA5B,GAAsC,GAAvC,EACP;AAAC,cAAQ,KAAKpC,KAAL,CAAW0B,IAApB;AAA0B,cAAQ,KAAKK,KAAL,CAAWP;AAA7C,KADO,CAAX;AAGH;;AACDyB,EAAAA,YAAY,CAACC,KAAD,EAAO;AACf,SAAKX,QAAL,CAAc;AACV,OAACW,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AADxB,KAAd;AAGH;;AACDnC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAM,MAAA,QAAQ,EAAE,KAAK4B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAU,MAAA,SAAS,EAAC,cAApB;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAA+C,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWgB,IAAhE;AAAsE,MAAA,QAAQ,EAAE,KAAKE,YAArF;AAAmG,MAAA,WAAW,EAAC,SAA/G;AAAyH,MAAA,QAAQ,MAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,mBAA/B;AAAmD,MAAA,KAAK,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,CADJ,CADJ;AAYH;;AAnCgC;;AAsCrC,eAAepD,IAAf","sourcesContent":["import React from 'react';\nimport { getRequest, postRequest } from './requests.js';\n\n\nclass Post extends React.Component{\n    constructor(props){\n        super(props);\n\n    }\n\n    isToday = (someDate) => {\n        const today = new Date()\n        return someDate.getDate() === today.getDate() &&\n          someDate.getMonth() === today.getMonth() &&\n          someDate.getFullYear() === today.getFullYear()\n    }\n\n    formatDate(date){\n        date = new Date(date);\n        date = new Date(date.getTime() - date.getTimezoneOffset()*60000);\n        if(this.isToday(date)){\n            return date.toLocaleTimeString('en-US', {hour12: true, hour: \"numeric\", minute: \"numeric\"})\n        }\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    }\n\n    render(){\n        return (\n            <div className=\"card my-4 mx-md-3\">\n                <p className=\"card-header\">{this.props.author} <span className=\"text-muted ml-3\">{this.formatDate(this.props.created)}</span></p>\n                <div className=\"card-body\">\n                    <h1 className=\"card-title\">{this.props.title}</h1>\n                    <p className=\"card-text\">{this.props.body}</p>\n                    <Like post_id={this.props.id} user={this.props.user} />  \n                    <a role=\"button\" className=\"btn btn-light card-link\">Comment</a>\n                </div>\n                <div className=\"card-footer\">\n                    <Comment post_id={this.props.id} user={this.props.user} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Like extends React.Component{\n    constructor(props){ \n        super(props);\n        // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n        this.state = {\n            likes: null,\n            liked: null\n        };\n        this.getLikes = this.getLikes.bind(this);\n        this.isLiked = this.isLiked.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        \n    }\n    componentDidMount = () => {\n        this.getLikes();\n        this.isLiked();\n    }\n    getLikes(){\n        getRequest(\"like/\"+this.props.post_id+'/').then((response) => {\n            this.setState({likes: response['likes']})\n        });\n    }\n    isLiked(){\n        if(this.props.user){\n            postRequest('isliked/', {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                this.setState({liked: response['liked']});\n            });\n        } else{\n            this.setState({liked: false});\n        }\n    }\n    handleClick(e){\n        e.preventDefault();\n\n        if(!this.props.user){\n            alert('Please login');\n            return;\n        }\n\n        if(this.state.liked){ // send unlike\n            postRequest(\"unlike/\", {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                if(response['status'] === 'OK'){\n                    this.setState({\n                        likes: this.state.likes - 1,\n                        liked: false\n                    });\n                }\n                    \n            });\n            \n        } else{ // send like\n            postRequest(\"like/\" + this.props.post_id + '/', \n                {\"user\": this.props.user, \"post_id\": this.props.post_id}\n            ).then((response) => {\n                if(response['status'] === 'OK')\n                    this.setState({\n                        likes: this.state.likes + 1,\n                        liked: true\n                    });\n            });\n        }\n    }\n    render(){\n        return(\n            <a role=\"button\" className=\"btn btn-outline-light card-link\" onClick={this.handleClick}>\n                {this.state.liked ? \n                <img src={process.env.PUBLIC_URL + '/images/like-color.svg'} width=\"45\" height=\"30\" alt=\"\" /> :\n                <img src={process.env.PUBLIC_URL + '/images/like-gray.svg'} width=\"45\" height=\"30\" alt=\"\" /> }\n                <span className=\"ml-1\">{this.state.likes}</span>\n            </a>\n        );\n    }\n}\n\nclass Comment extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            rows: 1,\n            body: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        console.log(this.props.user);\n        postRequest('allcomments/' + this.props.post_id + '/', \n            {\"user\": this.props.user, \"body\": this.state.body}\n        );\n    }\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"w-75 col-auto\">\n                    <textarea className=\"form-control\" name=\"body\" rows={this.state.rows} onChange={this.handleChange} placeholder=\"Comment\" required ></textarea>\n                    </div>\n                    <div className=\"w-25 col-auto\">\n                    <input type=\"submit\" className=\"btn btn-secondary\" value=\"Send\" />\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}