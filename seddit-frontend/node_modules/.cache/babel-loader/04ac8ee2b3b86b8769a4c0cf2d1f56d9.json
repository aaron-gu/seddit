{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js\";\nimport React from 'react';\nimport { BarLoader } from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport Post from './Post.js';\nimport { getRequest, postRequest } from './requests.js';\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      getRequest('feed/').then(response => {\n        this.setState({\n          posts: response['feed']\n        });\n      });\n    };\n\n    this.isLoading = () => {\n      return this.state.posts == null;\n    };\n\n    this.isToday = someDate => {\n      const today = new Date();\n      return someDate.getDate() === today.getDate() && someDate.getMonth() === today.getMonth() && someDate.getFullYear() === today.getFullYear();\n    };\n\n    this.state = {\n      posts: null,\n      title: '',\n      body: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // componentWillUnmount(){\n  // }\n  // tick(){\n  //     this.setState({\n  //         last_updated: new Date()\n  //     });\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    postRequest('post/', {\n      \"user\": Cookies.get('user'),\n      \"auth_token\": Cookies.get('auth_token'),\n      \"title\": this.state.title,\n      \"body\": this.state.body\n    });\n    $(\"#closeModal\").click();\n  }\n\n  formatDate(date) {\n    date = new Date(date);\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n\n    if (this.isToday(date)) {\n      return date.toLocaleTimeString('en-US', {\n        hour12: true,\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n    }\n\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n\n  render() {\n    if (this.state.posts == null) {\n      return React.createElement(BarLoader, {\n        sizeUnit: \"px\",\n        size: 40,\n        loading: this.isLoading(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n\n    const feedItems = this.state.posts.map((post, idx) => React.createElement(Post, {\n      key: post['id'],\n      id: post['id'],\n      user: post['user'],\n      author: post['author'],\n      title: post['title'],\n      body: post['body'],\n      created: post['created'],\n      likes: post['likes'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n    const writePostBtn = this.props.user ? React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg\",\n      id: \"write-post\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#write-post-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Write Post\") : \"\";\n    return React.createElement(\"div\", {\n      className: \"mx-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, feedItems, writePostBtn, React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"write-post-modal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLongTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLongTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Compose\"), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"closeModal\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"What's on your mind?\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"body\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Post!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js"],"names":["React","BarLoader","Cookies","$","Post","getRequest","postRequest","Feed","Component","constructor","props","componentDidMount","then","response","setState","posts","isLoading","state","isToday","someDate","today","Date","getDate","getMonth","getFullYear","title","body","handleSubmit","bind","handleChange","formatDate","e","target","name","value","event","preventDefault","get","click","date","getTime","getTimezoneOffset","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","year","month","day","render","feedItems","map","post","idx","writePostBtn","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;;AAGA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAYlBC,iBAZkB,GAYE,MAAM;AACtBN,MAAAA,UAAU,CAAC,OAAD,CAAV,CAAoBO,IAApB,CAA0BC,QAAD,IAAc;AACnC,aAAKC,QAAL,CAAc;AAACC,UAAAA,KAAK,EAAEF,QAAQ,CAAC,MAAD;AAAhB,SAAd;AACH,OAFD;AAGH,KAhBiB;;AAAA,SAkBlBG,SAlBkB,GAkBN,MAAM;AACd,aAAO,KAAKC,KAAL,CAAWF,KAAX,IAAoB,IAA3B;AACH,KApBiB;;AAAA,SAiDlBG,OAjDkB,GAiDPC,QAAD,IAAc;AACpB,YAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,aAAOF,QAAQ,CAACG,OAAT,OAAuBF,KAAK,CAACE,OAAN,EAAvB,IACLH,QAAQ,CAACI,QAAT,OAAwBH,KAAK,CAACG,QAAN,EADnB,IAELJ,QAAQ,CAACK,WAAT,OAA2BJ,KAAK,CAACI,WAAN,EAF7B;AAGH,KAtDiB;;AAEd,SAAKP,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,IADE;AAETU,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAYDC,EAAAA,YAAY,CAACE,CAAD,EAAG;AACX,SAAKjB,QAAL,CAAc;AACV,OAACiB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AADhB,KAAd;AAGH,GA3B6B,CA4B9B;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;AAEAP,EAAAA,YAAY,CAACQ,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACC,cAAN;AACA9B,IAAAA,WAAW,CAAC,OAAD,EAAU;AACjB,cAAQJ,OAAO,CAACmC,GAAR,CAAY,MAAZ,CADS;AAEjB,oBAAcnC,OAAO,CAACmC,GAAR,CAAY,YAAZ,CAFG;AAGjB,eAAS,KAAKpB,KAAL,CAAWQ,KAHH;AAIjB,cAAQ,KAAKR,KAAL,CAAWS;AAJF,KAAV,CAAX;AAMAvB,IAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBmC,KAAjB;AACH;;AASDR,EAAAA,UAAU,CAACS,IAAD,EAAM;AACZA,IAAAA,IAAI,GAAG,IAAIlB,IAAJ,CAASkB,IAAT,CAAP;AACAA,IAAAA,IAAI,GAAG,IAAIlB,IAAJ,CAASkB,IAAI,CAACC,OAAL,KAAiBD,IAAI,CAACE,iBAAL,KAAyB,KAAnD,CAAP;;AACA,QAAG,KAAKvB,OAAL,CAAaqB,IAAb,CAAH,EAAsB;AAClB,aAAOA,IAAI,CAACG,kBAAL,CAAwB,OAAxB,EAAiC;AAACC,QAAAA,MAAM,EAAE,IAAT;AAAeC,QAAAA,IAAI,EAAE,SAArB;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OAAjC,CAAP;AACH;;AACD,WAAON,IAAI,CAACO,kBAAL,CAAwB,OAAxB,EAAiC;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAAjC,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKjC,KAAL,CAAWF,KAAX,IAAoB,IAAvB,EAA4B;AACxB,aAAO,oBAAC,SAAD;AACL,QAAA,QAAQ,EAAE,IADL;AAEL,QAAA,IAAI,EAAE,EAFD;AAGL,QAAA,OAAO,EAAE,KAAKC,SAAL,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH;;AACD,UAAMmC,SAAS,GAAG,KAAKlC,KAAL,CAAWF,KAAX,CAAiBqC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,GAAP,KACnC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAI,CAAC,IAAD,CAAf;AAAuB,MAAA,EAAE,EAAEA,IAAI,CAAC,IAAD,CAA/B;AAAuC,MAAA,IAAI,EAAEA,IAAI,CAAC,MAAD,CAAjD;AAA2D,MAAA,MAAM,EAAEA,IAAI,CAAC,QAAD,CAAvE;AAAmF,MAAA,KAAK,EAAEA,IAAI,CAAC,OAAD,CAA9F;AAAyG,MAAA,IAAI,EAAEA,IAAI,CAAC,MAAD,CAAnH;AAA6H,MAAA,OAAO,EAAEA,IAAI,CAAC,SAAD,CAA1I;AAAuJ,MAAA,KAAK,EAAEA,IAAI,CAAC,OAAD,CAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc,CAAlB;AAIA,UAAME,YAAY,GAAG,KAAK7C,KAAL,CAAW8C,IAAX,GAAkB;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,EAAE,EAAC,YAA9C;AAA2D,MAAA,IAAI,EAAC,QAAhE;AAAyE,qBAAY,OAArF;AAA6F,qBAAY,mBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAlB,GAAqK,EAA1L;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,SADL,EAEKI,YAFL,EAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,EAAE,EAAC,kBAA/B;AAAkD,MAAA,QAAQ,EAAC,IAA3D;AAAgE,MAAA,IAAI,EAAC,QAArE;AAA8E,yBAAgB,uBAA9F;AAAsH,qBAAY,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,EAAE,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,YAAzB;AAAsC,MAAA,SAAS,EAAC,OAAhD;AAAwD,sBAAa,OAArE;AAA6E,oBAAW,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,qBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAFJ,CADA,EAOA;AAAM,MAAA,QAAQ,EAAE,KAAK5B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAC,cAA5B;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,IAAI,EAAC,OAA5D;AAAoE,MAAA,WAAW,EAAC,sBAAhF;AAAuG,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWQ,KAAzH;AAAgI,MAAA,QAAQ,EAAE,KAAKI,YAA/I;AAA6J,MAAA,QAAQ,MAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAC4K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5K,EAEI;AAAU,MAAA,EAAE,EAAC,MAAb;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAA6C,MAAA,IAAI,EAAC,MAAlD;AAAyD,MAAA,IAAI,EAAC,MAA9D;AAAqE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWS,IAAvF;AAA6F,MAAA,QAAQ,EAAE,KAAKG,YAA5G;AAA0H,MAAA,QAAQ,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,iBAA/B;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CAPA,CADJ,CADA,CAJJ,CADA,CADJ;AA8BH;;AA9G6B;;AAiHlC,eAAetB,IAAf","sourcesContent":["import React from 'react';\nimport {BarLoader} from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport Post from './Post.js';\nimport { getRequest, postRequest } from './requests.js';\n\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: null,\n            title: '',\n            body: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    componentDidMount = () => {\n        getRequest('feed/').then((response) => {\n            this.setState({posts: response['feed']});\n        });\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    // componentWillUnmount(){\n\n    // }\n\n    // tick(){\n\n    //     this.setState({\n    //         last_updated: new Date()\n    //     });\n    // }\n\n    handleSubmit(event){\n        event.preventDefault();\n        postRequest('post/', {\n            \"user\": Cookies.get('user'),\n            \"auth_token\": Cookies.get('auth_token'),\n            \"title\": this.state.title,\n            \"body\": this.state.body\n        });\n        $(\"#closeModal\").click();\n    }\n\n    isToday = (someDate) => {\n        const today = new Date()\n        return someDate.getDate() === today.getDate() &&\n          someDate.getMonth() === today.getMonth() &&\n          someDate.getFullYear() === today.getFullYear()\n    }\n\n    formatDate(date){\n        date = new Date(date);\n        date = new Date(date.getTime() - date.getTimezoneOffset()*60000);\n        if(this.isToday(date)){\n            return date.toLocaleTimeString('en-US', {hour12: true, hour: \"numeric\", minute: \"numeric\"})\n        }\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    }\n\n    render(){\n        if(this.state.posts == null){\n            return <BarLoader\n              sizeUnit={\"px\"}\n              size={40}\n              loading={this.isLoading()}\n            />\n        }\n        const feedItems = this.state.posts.map((post, idx) =>\n            <Post key={post['id']} id={post['id']} user={post['user']} author={post['author']} title={post['title']} body={post['body']} created={post['created']} likes={post['likes']} /> \n        );\n        \n        const writePostBtn = this.props.user ? <button className=\"btn btn-primary btn-lg\" id=\"write-post\" type=\"button\" data-toggle=\"modal\" data-target=\"#write-post-modal\">Write Post</button> : \"\";\n        \n        return (\n            <div className=\"mx-sm-5\">\n            <div className=\"mx-md-5\">\n                {feedItems}\n                {writePostBtn}        \n\n                <div className=\"modal fade\" id=\"write-post-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Compose</h5>\n                        <button type=\"button\" id=\"closeModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"modal-body\">\n                            <input id=\"title\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"What's on your mind?\" value={this.state.title} onChange={this.handleChange} required /><br />\n                            <textarea id=\"body\" className=\"form-control\" type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} required />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Post!\" />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n            </div>            \n            </div>\n        );\n    }\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}