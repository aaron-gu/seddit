{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js\";\nimport React from 'react';\nimport { BarLoader } from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport Post from './Post.js';\nimport { getRequest, postRequest } from './requests.js';\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      getRequest('feed/0/').then(response => {\n        this.setState({\n          posts: response['feed']\n        });\n      });\n    };\n\n    this.componentDidMount = () => {// getRequest('feed/0/').then((response) => {\n      //     this.setState({posts: response['feed']});\n      // });\n      // this.interval = setInterval(() => {\n      //     getRequest('feed/0/').then((response) => {\n      //         this.setState({posts: response['feed']});\n      //     });\n      // }, 60000);\n    };\n\n    this.isLoading = () => {\n      return this.state.posts == null;\n    };\n\n    this.loadPosts = () => {\n      this.setState({\n        page: this.state.page + 1\n      });\n      getRequest('feed/' + this.state.page + '/').then(response => {\n        this.setState({\n          posts: this.state.posts.concat(response['feed'])\n        });\n      });\n    };\n\n    this.state = {\n      posts: null,\n      title: '',\n      body: '',\n      length: 0,\n      page: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    window.onscroll = () => {\n      // console.log(window.innerHeight + document.documentElement.scrollTop + ' ' + document.documentElement.offsetHeight)\n      if (document.documentElement.offsetHeight - (window.innerHeight + document.documentElement.scrollTop) <= 400) {\n        this.loadPosts();\n      }\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    this.setState({\n      length: this.state.body.length\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.length < 280) {\n      alert(\"Posts must be at least 280 characters long.\");\n      return;\n    }\n\n    postRequest('post/', {\n      \"user\": Cookies.get('user'),\n      \"auth_token\": Cookies.get('auth_token'),\n      \"title\": this.state.title,\n      \"body\": this.state.body\n    }).then(response => {\n      var post = response['post'];\n      var newPosts = this.state.posts.slice();\n      newPosts.unshift(post);\n      this.setState({\n        posts: newPosts\n      });\n    });\n    $(\"#closeModal\").click();\n  }\n\n  render() {\n    var feedItems;\n\n    if (this.state.posts == null) {\n      return React.createElement(BarLoader, {\n        sizeUnit: \"px\",\n        size: 40,\n        loading: this.isLoading(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    } else if (this.state.posts.length === 0) {\n      feedItems = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"No posts yet!\");\n    } else {\n      feedItems = this.state.posts.map((post, idx) => React.createElement(Post, {\n        key: post['id'],\n        id: post['id'],\n        user: this.props.user,\n        author: post['author'],\n        title: post['title'],\n        body: post['body'],\n        created: post['created'],\n        likes: post['likes'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n\n    const writePostBtn = this.props.user ? React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg\",\n      id: \"write-post\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#write-post-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Write Post\") : \"\";\n    return React.createElement(\"div\", {\n      className: \"mx-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, feedItems, writePostBtn, React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"write-post-modal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLongTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLongTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Compose\"), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"closeModal\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"What's on your mind?\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"body\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.length), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Post!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js"],"names":["React","BarLoader","Cookies","$","Post","getRequest","postRequest","Feed","Component","constructor","props","componentWillMount","then","response","setState","posts","componentDidMount","isLoading","state","loadPosts","page","concat","title","body","length","handleSubmit","bind","handleChange","window","onscroll","document","documentElement","offsetHeight","innerHeight","scrollTop","e","target","name","value","event","preventDefault","alert","get","post","newPosts","slice","unshift","click","render","feedItems","map","idx","user","writePostBtn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BarLoader} from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport Post from './Post.js';\nimport { getRequest, postRequest } from './requests.js';\n\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: null,\n            title: '',\n            body: '',\n            length: 0,\n            page: 0\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        window.onscroll = () => {\n            // console.log(window.innerHeight + document.documentElement.scrollTop + ' ' + document.documentElement.offsetHeight)\n            if(document.documentElement.offsetHeight - (window.innerHeight + document.documentElement.scrollTop) <= 400){\n                this.loadPosts();\n            }\n        }\n    }\n\n    componentWillMount = () => {\n        getRequest('feed/0/').then((response) => {\n            this.setState({posts: response['feed']});\n        });\n    }\n\n    componentDidMount = () => {\n        // getRequest('feed/0/').then((response) => {\n        //     this.setState({posts: response['feed']});\n        // });\n\n        // this.interval = setInterval(() => {\n        //     getRequest('feed/0/').then((response) => {\n        //         this.setState({posts: response['feed']});\n        //     });\n        // }, 60000);\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        this.setState({\n            length: this.state.body.length\n        })\n    }\n\n    loadPosts = () => {\n        this.setState({page: this.state.page + 1});\n        getRequest('feed/' + this.state.page + '/').then((response) => {\n            this.setState({posts: this.state.posts.concat(response['feed'])});\n        });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.state.length < 280){\n            alert(\"Posts must be at least 280 characters long.\");\n            return;\n        }\n        postRequest('post/', {\n            \"user\": Cookies.get('user'),\n            \"auth_token\": Cookies.get('auth_token'),\n            \"title\": this.state.title,\n            \"body\": this.state.body\n        }).then((response) => {\n            var post = response['post'];\n            var newPosts = this.state.posts.slice();\n            newPosts.unshift(post);\n            this.setState({posts: newPosts});\n        });\n        $(\"#closeModal\").click();\n    }\n\n    render(){\n        var feedItems;\n        if(this.state.posts == null){\n            return <BarLoader\n              sizeUnit={\"px\"}\n              size={40}\n              loading={this.isLoading()}\n            />\n        }\n        else if(this.state.posts.length === 0){\n            feedItems = <div>No posts yet!</div>;\n        }\n        else{\n            feedItems = this.state.posts.map((post, idx) =>\n                <Post key={post['id']} id={post['id']} user={this.props.user} author={post['author']} title={post['title']} body={post['body']} created={post['created']} likes={post['likes']} /> \n            );\n        }\n        \n        const writePostBtn = this.props.user ? <button className=\"btn btn-primary btn-lg\" id=\"write-post\" type=\"button\" data-toggle=\"modal\" data-target=\"#write-post-modal\">Write Post</button> : \"\";\n        \n        return (\n            <div className=\"mx-sm-5\">\n            <div className=\"mx-md-5\">\n                {feedItems}\n                {writePostBtn}        \n\n                <div className=\"modal fade\" id=\"write-post-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Compose</h5>\n                        <button type=\"button\" id=\"closeModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"modal-body\">\n                            <input id=\"title\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"What's on your mind?\" value={this.state.title} onChange={this.handleChange} required /><br />\n                            <textarea id=\"body\" className=\"form-control\" type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} required />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <span>{this.state.length}</span>\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Post!\" />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n            </div>            \n            </div>\n        );\n    }\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}