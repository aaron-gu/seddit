{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js\";\nimport React from 'react';\nimport { BarLoader } from 'react-spinners';\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch('http://127.0.0.1:5000/feed/').then(response => {\n        return response.json();\n      }).then(myJson => {\n        console.log(JSON.stringify(myJson));\n        this.setState({\n          posts: myJson //JSON.stringify(myJson)['feed']\n\n        });\n      });\n      console.log(this.state.posts);\n    };\n\n    this.isLoading = () => {\n      return this.state.posts == null;\n    };\n\n    this.state = {\n      posts: null\n    };\n  }\n\n  // componentWillUnmount(){\n  // }\n  // tick(){\n  //     this.setState({\n  //         last_updated: new Date()\n  //     });\n  // }\n  render() {\n    if (this.state.posts == null) {\n      return React.createElement(BarLoader, {\n        sizeUnit: \"px\",\n        size: 40,\n        loading: this.isLoading(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n\n    const feedItems = this.state.posts.map((post, idx) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, post['title']), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, post['username']), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, post['created']), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, post['body'])));\n    return feedItems;\n  }\n\n}\n\nexport { Feed };","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js"],"names":["React","BarLoader","Feed","Component","constructor","props","componentDidMount","fetch","then","response","json","myJson","console","log","JSON","stringify","setState","posts","state","isLoading","render","feedItems","map","post","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAKlBC,iBALkB,GAKE,MAAM;AACtBC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIWG,MAAD,IAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAZ;AACA,aAAKK,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEN,MADG,CACG;;AADH,SAAd;AAGP,OATD;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWD,KAAvB;AACH,KAjBiB;;AAAA,SAmBlBE,SAnBkB,GAmBN,MAAM;AACd,aAAO,KAAKD,KAAL,CAAWD,KAAX,IAAoB,IAA3B;AACH,KArBiB;;AAEd,SAAKC,KAAL,GAAa;AAACD,MAAAA,KAAK,EAAE;AAAR,KAAb;AACH;;AAmBD;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKF,KAAL,CAAWD,KAAX,IAAoB,IAAvB,EAA4B;AACxB,aAAO,oBAAC,SAAD;AACL,QAAA,QAAQ,EAAE,IADL;AAEL,QAAA,IAAI,EAAE,EAFD;AAGL,QAAA,OAAO,EAAE,KAAKE,SAAL,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH;;AACD,UAAME,SAAS,GAAG,KAAKH,KAAL,CAAWD,KAAX,CAAiBK,GAAjB,CAAqB,CAACC,IAAD,EAAOC,GAAP,KACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAAC,OAAD,CAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAAC,UAAD,CAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAAC,SAAD,CAAT,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAI,CAAC,MAAD,CAAR,CAJJ,CADc,CAAlB;AASA,WAAOF,SAAP;AACH;;AApD6B;;AAuDlC,SAAQnB,IAAR","sourcesContent":["import React from 'react';\nimport {BarLoader} from 'react-spinners';\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {posts: null};\n    }\n\n    componentDidMount = () => {\n        fetch('http://127.0.0.1:5000/feed/')\n            .then((response) => {\n                return response.json();\n            })\n            .then((myJson) => {\n                console.log(JSON.stringify(myJson));\n                this.setState({\n                    posts: myJson//JSON.stringify(myJson)['feed']\n                }) \n        });\n        console.log(this.state.posts);\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n    // componentWillUnmount(){\n\n    // }\n\n    // tick(){\n\n    //     this.setState({\n    //         last_updated: new Date()\n    //     });\n    // }\n\n    render(){\n        if(this.state.posts == null){\n            return <BarLoader\n              sizeUnit={\"px\"}\n              size={40}\n              loading={this.isLoading()}\n            />\n        }\n        const feedItems = this.state.posts.map((post, idx) =>\n            <div>\n                <h1>{post['title']}</h1>\n                <h3>{post['username']}</h3>\n                <h4>{post['created']}</h4>\n                <p>{post['body']}</p>\n            </div>\n        );\n        \n        return feedItems;\n    }\n}\n\nexport {Feed};"]},"metadata":{},"sourceType":"module"}