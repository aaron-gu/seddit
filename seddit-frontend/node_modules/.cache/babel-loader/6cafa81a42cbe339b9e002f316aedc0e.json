{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Auth.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      fetch('http://127.0.0.1:5000/login/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"username\": this.state.username,\n          \"password\": this.state.password\n        })\n      }).then(response => {\n        return response.json();\n      }).then(myJson => {\n        //console.log(JSON.stringify(myJson));\n        if (myJson['status'] === \"OK\") {\n          console.log('ok'); // send user state to the App\n\n          this.props.onLogin(this.state.username);\n          Cookies.set('user', this.state.username);\n          Cookies.set('auth_token', myJson['auth_token']);\n          console.log(Cookies.get('auth_token'));\n          this.setState({\n            toFeed: true\n          }); // this.props.history.push(\"/\");\n        } else {\n          console.log(myJson['error']);\n          this.setState({\n            username: \"\",\n            password: \"\",\n            errorMsg: myJson['error']\n          });\n        }\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errorMsg: \"\",\n      toFeed: false\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  render() {\n    if (this.state.toFeed === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }); // when using render with react router, you can use Redirect\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"auth-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.errorMsg), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Username\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Password\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      disabled: !this.validateForm(),\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Logout extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    fetch('http://127.0.0.1:5000/logout/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": Cookies.get('user')\n      })\n    }).then(response => {\n      console.log(response.json());\n    });\n    this.props.onLogout(\"\"); // reset username\n\n    Cookies.remove('user');\n    return React.createElement(Redirect, {\n      to: \"/login/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      if (!this.validateForm()) return;\n      fetch('http://127.0.0.1:5000/register/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"username\": this.state.username,\n          \"password\": this.state.password\n        })\n      }).then(response => {\n        return response.json();\n      }).then(myJson => {\n        //console.log(JSON.stringify(myJson));\n        if (myJson['status'] === \"OK\") {\n          console.log('ok');\n          this.props.history.push(\"/login/\");\n        } else {\n          console.log(myJson['error']);\n          this.setState({\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errorMsg: myJson['error']\n          });\n        }\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errorMsg: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  validateForm() {\n    if (this.state.username.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword) return true;\n\n    if (this.state.username.length === 0 || this.state.password.length === 0 || this.state.confirmPassword === 0) {\n      this.setState({\n        errorMsg: \"All fields not filled out\"\n      });\n    } else if (this.state.password !== this.state.confirmPassword) {\n      this.setState({\n        errorMsg: \"Passwords do not match\"\n      });\n    } else if (this.state.password === this.state.confirmPassword) {\n      this.setState({\n        errorMsg: \"\"\n      });\n    }\n\n    return false;\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"auth-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.errorMsg), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Username\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Password\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Confirm Password\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      value: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport { Login, Logout, Register };","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Auth.js"],"names":["React","Redirect","Cookies","Login","Component","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","state","username","password","then","response","json","myJson","console","log","onLogin","set","get","toFeed","errorMsg","validateForm","length","render","Logout","onLogout","remove","Register","history","push","confirmPassword","bind","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errorMsg: \"\",\n            toFeed: false\n        };\n    }\n    \n    validateForm(){\n        return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n    \n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleSubmit = async event => {\n        event.preventDefault();\n        fetch('http://127.0.0.1:5000/login/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"username\": this.state.username,\n                \"password\": this.state.password\n            })\n        })\n        .then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            //console.log(JSON.stringify(myJson));\n            if(myJson['status'] === \"OK\"){\n                console.log('ok');\n                // send user state to the App\n                this.props.onLogin(this.state.username);\n                Cookies.set('user', this.state.username);\n                Cookies.set('auth_token', myJson['auth_token']);\n                console.log(Cookies.get('auth_token'));\n                this.setState({toFeed: true});\n                // this.props.history.push(\"/\");\n            }\n            else{\n                console.log(myJson['error']);\n                this.setState({\n                    username: \"\",\n                    password: \"\",\n                    errorMsg: myJson['error']\n                })\n            }\n        });\n    }\n\n    render(){\n        if(this.state.toFeed === true){\n            return <Redirect to=\"/\" />; // when using render with react router, you can use Redirect\n        }\n        return(\n            <div className=\"Auth\">\n                <h1 id=\"auth-header\">Login</h1>\n                <div className=\"errorMsg\">{this.state.errorMsg}</div>\n                <form onSubmit={this.handleSubmit}>\n                    <label><b>Username</b></label><br />\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required autoFocus />\n                    <br />\n                    <label><b>Password</b></label><br />\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n                    <br />\n                    <input className=\"btn btn-primary btn-block\" type=\"submit\" disabled={!this.validateForm()} value=\"Login\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nclass Logout extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        fetch('http://127.0.0.1:5000/logout/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"user\": Cookies.get('user')\n            })\n        })\n        .then((response) => {\n            console.log(response.json());\n        });\n        this.props.onLogout(\"\"); // reset username\n        Cookies.remove('user');\n        return <Redirect to=\"/login/\" />;\n    }\n}\n\n\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errorMsg: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    validateForm(){\n        if(this.state.username.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword)\n            return true;\n        if(this.state.username.length === 0 || this.state.password.length === 0 || this.state.confirmPassword === 0){\n            this.setState({errorMsg: \"All fields not filled out\"});\n        } else if(this.state.password !== this.state.confirmPassword){\n            this.setState({errorMsg: \"Passwords do not match\"});\n        } else if(this.state.password === this.state.confirmPassword){\n            this.setState({errorMsg: \"\"});\n        }\n        return false;\n    }\n    \n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        if(!this.validateForm()) return;\n        fetch('http://127.0.0.1:5000/register/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"username\": this.state.username,\n                \"password\": this.state.password\n            })\n        })\n        .then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            //console.log(JSON.stringify(myJson));\n            if(myJson['status'] === \"OK\"){\n                console.log('ok');\n                this.props.history.push(\"/login/\");\n            }\n            else{\n                console.log(myJson['error']);\n                this.setState({\n                    username: \"\",\n                    password: \"\",\n                    confirmPassword: \"\",\n                    errorMsg: myJson['error']\n                })\n            }\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"Auth\">\n                <h1 id=\"auth-header\">Register</h1>\n                <div className=\"errorMsg\">{this.state.errorMsg}</div>\n                <form onSubmit={this.handleSubmit}>\n                    <label><b>Username</b></label><br />\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required autoFocus />\n                    <br />\n                    <label><b>Password</b></label><br />\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n                    <br />\n                    <label><b>Confirm Password</b></label><br />\n                    <input type=\"password\" name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.handleChange} required />\n                    <br />\n                    <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"Register\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport {Login, Logout, Register};"]},"metadata":{},"sourceType":"module"}