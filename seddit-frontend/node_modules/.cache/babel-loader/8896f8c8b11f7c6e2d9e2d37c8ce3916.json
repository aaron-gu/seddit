{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Post.js\";\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card my-4 mx-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.props.author, \" \", React.createElement(\"span\", {\n      className: \"text-muted ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.formatDate(this.props.created))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.body), React.createElement(Like, {\n      post_id: this.props.id,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      role: \"button\",\n      className: \"btn btn-light card-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Comment\")), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Comment, {\n      post_id: this.props.id,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Like extends React.Component {\n  constructor(props) {\n    super(props); // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n\n    this.componentDidMount = () => {\n      this.getLikes();\n      this.isLiked();\n    };\n\n    this.state = {\n      likes: null,\n      liked: null\n    };\n    this.getLikes = this.getLikes.bind(this);\n    this.isLiked = this.isLiked.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  getLikes() {\n    getRequest(\"like/\" + this.props.post_id + '/').then(response => {\n      this.setState({\n        likes: response['likes']\n      });\n    });\n  }\n\n  isLiked() {\n    if (this.props.user) {\n      postRequest('isliked/', {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        this.setState({\n          liked: response['liked']\n        });\n      });\n    } else {\n      this.setState({\n        liked: false\n      });\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    if (!this.props.user) {\n      alert('Please login');\n      return;\n    }\n\n    if (this.state.liked) {\n      // send unlike\n      postRequest(\"unlike/\", {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        if (response['status'] === 'OK') {\n          this.setState({\n            likes: this.state.likes - 1,\n            liked: false\n          });\n        }\n      });\n    } else {\n      // send like\n      postRequest(\"like/\" + this.props.post_id + '/', {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        if (response['status'] === 'OK') this.setState({\n          likes: this.state.likes + 1,\n          liked: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      role: \"button\",\n      className: \"btn btn-outline-light card-link\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.liked ? React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/images/like-color.svg',\n      width: \"45\",\n      height: \"30\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/images/like-gray.svg',\n      width: \"45\",\n      height: \"30\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ml-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.likes));\n  }\n\n}\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: 1,\n      body: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    postRequest('allcomments/' + this.props.post_id + '/', {\n      \"user\": this.props.user,\n      \"body\": this.state.body\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-75 col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"body\",\n      rows: this.state.rows,\n      onChange: this.handleChange,\n      placeholder: \"Comment\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"w-25 col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-secondary\",\n      value: \"Send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Post.js"],"names":["Post","React","Component","constructor","props","render","author","formatDate","created","title","body","id","user","Like","componentDidMount","getLikes","isLiked","state","likes","liked","bind","handleClick","getRequest","post_id","then","response","setState","postRequest","e","preventDefault","alert","process","env","PUBLIC_URL","Comment","rows","handleSubmit","handleChange","event","target","name","value"],"mappings":"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","sourcesContent":["\n\nclass Post extends React.Component{\n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return (\n            <div className=\"card my-4 mx-md-3\">\n                <p className=\"card-header\">{this.props.author} <span className=\"text-muted ml-3\">{this.formatDate(this.props.created)}</span></p>\n                <div className=\"card-body\">\n                    <h1 className=\"card-title\">{this.props.title}</h1>\n                    <p className=\"card-text\">{this.props.body}</p>\n                    <Like post_id={this.props.id} user={this.props.user} />  \n                    <a role=\"button\" className=\"btn btn-light card-link\">Comment</a>\n                </div>\n                <div className=\"card-footer\">\n                    <Comment post_id={this.props.id} user={this.props.user} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Like extends React.Component{\n    constructor(props){ \n        super(props);\n        // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n        this.state = {\n            likes: null,\n            liked: null\n        };\n        this.getLikes = this.getLikes.bind(this);\n        this.isLiked = this.isLiked.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        \n    }\n    componentDidMount = () => {\n        this.getLikes();\n        this.isLiked();\n    }\n    getLikes(){\n        getRequest(\"like/\"+this.props.post_id+'/').then((response) => {\n            this.setState({likes: response['likes']})\n        });\n    }\n    isLiked(){\n        if(this.props.user){\n            postRequest('isliked/', {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                this.setState({liked: response['liked']});\n            });\n        } else{\n            this.setState({liked: false});\n        }\n    }\n    handleClick(e){\n        e.preventDefault();\n\n        if(!this.props.user){\n            alert('Please login');\n            return;\n        }\n\n        if(this.state.liked){ // send unlike\n            postRequest(\"unlike/\", {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                if(response['status'] === 'OK'){\n                    this.setState({\n                        likes: this.state.likes - 1,\n                        liked: false\n                    });\n                }\n                    \n            });\n            \n        } else{ // send like\n            postRequest(\"like/\" + this.props.post_id + '/', {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                if(response['status'] === 'OK')\n                    this.setState({\n                        likes: this.state.likes + 1,\n                        liked: true\n                    });\n            });\n        }\n    }\n    render(){\n        return(\n            <a role=\"button\" className=\"btn btn-outline-light card-link\" onClick={this.handleClick}>\n                {this.state.liked ? \n                <img src={process.env.PUBLIC_URL + '/images/like-color.svg'} width=\"45\" height=\"30\" alt=\"\" /> :\n                <img src={process.env.PUBLIC_URL + '/images/like-gray.svg'} width=\"45\" height=\"30\" alt=\"\" /> }\n                <span className=\"ml-1\">{this.state.likes}</span>\n            </a>\n        );\n    }\n}\n\nclass Comment extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            rows: 1,\n            body: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        postRequest('allcomments/' + this.props.post_id + '/', {\"user\": this.props.user, \"body\": this.state.body});\n    }\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"w-75 col-auto\">\n                    <textarea className=\"form-control\" name=\"body\" rows={this.state.rows} onChange={this.handleChange} placeholder=\"Comment\" required ></textarea>\n                    </div>\n                    <div className=\"w-25 col-auto\">\n                    <input type=\"submit\" className=\"btn btn-secondary\" value=\"Send\" />\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}