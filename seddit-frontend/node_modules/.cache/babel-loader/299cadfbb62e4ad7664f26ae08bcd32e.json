{"ast":null,"code":"var _jsxFileName = \"/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js\";\nimport React from 'react';\nimport { BarLoader } from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport { getRequest, postRequest } from './requests.js';\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      getRequest('feed/').then(response => {\n        this.setState({\n          posts: response\n        });\n      });\n    };\n\n    this.isLoading = () => {\n      return this.state.posts == null;\n    };\n\n    this.isToday = someDate => {\n      const today = new Date();\n      return someDate.getDate() === today.getDate() && someDate.getMonth() === today.getMonth() && someDate.getFullYear() === today.getFullYear();\n    };\n\n    this.state = {\n      posts: null,\n      title: '',\n      body: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // componentWillUnmount(){\n  // }\n  // tick(){\n  //     this.setState({\n  //         last_updated: new Date()\n  //     });\n  // }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://127.0.0.1:5000/post/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": Cookies.get('user'),\n        \"auth_token\": Cookies.get('auth_token'),\n        \"title\": this.state.title,\n        \"body\": this.state.body\n      })\n    }).then(response => {\n      return response.json();\n    }).then(myJson => {\n      console.log(JSON.stringify(myJson));\n    });\n    $(\"#closeModal\").click();\n  }\n\n  formatDate(date) {\n    date = new Date(date);\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n\n    if (this.isToday(date)) {\n      return date.toLocaleTimeString('en-US', {\n        hour12: true,\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n    }\n\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n\n  render() {\n    // if(this.state.posts == null){\n    //     return <BarLoader\n    //       sizeUnit={\"px\"}\n    //       size={40}\n    //       loading={this.isLoading()}\n    //     />\n    // }\n    const feedItems = this.state.posts['feed'].map((post, idx) => React.createElement(\"div\", {\n      key: post['id'],\n      className: \"card my-4 mx-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, post['author'], \" \", React.createElement(\"span\", {\n      className: \"text-muted ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.formatDate(post['created']))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, post['title']), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, post['body']), React.createElement(Like, {\n      post_id: post['id'],\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      role: \"button\",\n      className: \"btn btn-light card-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Comment\")), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Comment, {\n      post_id: post['id'],\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n    const writePostBtn = this.props.user ? React.createElement(\"button\", {\n      className: \"btn btn-primary btn-lg\",\n      id: \"write-post\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#write-post-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Write Post\") : \"\";\n    return React.createElement(\"div\", {\n      className: \"mx-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, feedItems, writePostBtn, React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"write-post-modal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLongTitle\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: \"exampleModalLongTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Compose\"), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"closeModal\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"What's on your mind?\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"body\",\n      className: \"form-control\",\n      type: \"text\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Post!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nclass Like extends React.Component {\n  constructor(props) {\n    super(props); // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n\n    this.componentDidMount = () => {\n      this.getLikes();\n      this.isLiked();\n    };\n\n    this.state = {\n      likes: null,\n      liked: null\n    };\n    this.getLikes = this.getLikes.bind(this);\n    this.isLiked = this.isLiked.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  getLikes() {\n    getRequest(\"like/\" + this.props.post_id + '/').then(response => {\n      this.setState({\n        likes: response['likes']\n      });\n    });\n  }\n\n  isLiked() {\n    if (this.props.user) {\n      postRequest('isliked/', {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        this.setState({\n          liked: response['liked']\n        });\n      });\n    } else {\n      this.setState({\n        liked: false\n      });\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    if (!this.props.user) {\n      alert('Please login');\n      return;\n    }\n\n    if (this.state.liked) {\n      // send unlike\n      postRequest(\"unlike/\", {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        if (response['status'] === 'OK') {\n          this.setState({\n            likes: this.state.likes - 1,\n            liked: false\n          });\n        }\n      });\n    } else {\n      // send like\n      postRequest(\"like/\" + this.props.post_id + '/', {\n        \"user\": this.props.user,\n        \"post_id\": this.props.post_id\n      }).then(response => {\n        if (response['status'] === 'OK') this.setState({\n          likes: this.state.likes + 1,\n          liked: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      role: \"button\",\n      className: \"btn btn-outline-light card-link\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, this.state.liked ? React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/images/like-color.svg',\n      width: \"45\",\n      height: \"30\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/images/like-gray.svg',\n      width: \"45\",\n      height: \"30\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ml-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.likes));\n  }\n\n}\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    postRequest('allcomments/', {});\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"body\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport { Feed };","map":{"version":3,"sources":["/Users/aarongu/dev/social-media/seddit-frontend/src/Feed.js"],"names":["React","BarLoader","Cookies","$","getRequest","postRequest","Feed","Component","constructor","props","componentDidMount","then","response","setState","posts","isLoading","state","isToday","someDate","today","Date","getDate","getMonth","getFullYear","title","body","handleSubmit","bind","handleChange","formatDate","e","target","name","value","event","preventDefault","fetch","method","headers","JSON","stringify","get","json","myJson","console","log","click","date","getTime","getTimezoneOffset","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","year","month","day","render","feedItems","map","post","idx","user","writePostBtn","Like","getLikes","isLiked","likes","liked","handleClick","post_id","alert","process","env","PUBLIC_URL","Comment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BarLoader} from 'react-spinners';\nimport Cookies from 'js-cookie';\nimport $ from 'jquery';\nimport { getRequest, postRequest } from './requests.js';\n\n\nclass Feed extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: null,\n            title: '',\n            body: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    componentDidMount = () => {\n        getRequest('feed/').then((response) => {\n            this.setState({posts: response});\n        });\n    }\n\n    isLoading = () => {\n        return this.state.posts == null;\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    // componentWillUnmount(){\n\n    // }\n\n    // tick(){\n\n    //     this.setState({\n    //         last_updated: new Date()\n    //     });\n    // }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch('http://127.0.0.1:5000/post/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"user\": Cookies.get('user'),\n                \"auth_token\": Cookies.get('auth_token'),\n                \"title\": this.state.title,\n                \"body\": this.state.body\n            })\n        }).then((response) => {\n            return response.json();\n        })\n        .then((myJson) => {\n            console.log(JSON.stringify(myJson));\n        });\n        $(\"#closeModal\").click();\n    }\n\n    isToday = (someDate) => {\n        const today = new Date()\n        return someDate.getDate() === today.getDate() &&\n          someDate.getMonth() === today.getMonth() &&\n          someDate.getFullYear() === today.getFullYear()\n    }\n\n    formatDate(date){\n        date = new Date(date);\n        date = new Date(date.getTime() - date.getTimezoneOffset()*60000);\n        if(this.isToday(date)){\n            return date.toLocaleTimeString('en-US', {hour12: true, hour: \"numeric\", minute: \"numeric\"})\n        }\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    }\n\n    render(){\n        // if(this.state.posts == null){\n        //     return <BarLoader\n        //       sizeUnit={\"px\"}\n        //       size={40}\n        //       loading={this.isLoading()}\n        //     />\n        // }\n        const feedItems = this.state.posts['feed'].map((post, idx) =>\n            <div key={post['id']} className=\"card my-4 mx-md-3\">\n                <p className=\"card-header\">{post['author']} <span className=\"text-muted ml-3\">{this.formatDate(post['created'])}</span></p>\n                <div className=\"card-body\">\n                    <h1 className=\"card-title\">{post['title']}</h1>\n                    <p className=\"card-text\">{post['body']}</p>\n                    <Like post_id={post['id']} user={this.props.user} />  \n                    <a role=\"button\" className=\"btn btn-light card-link\">Comment</a>\n                </div>\n                <div className=\"card-footer\">\n                    <Comment post_id={post['id']} user={this.props.user} />\n                </div>\n            </div>\n        );\n        \n        const writePostBtn = this.props.user ? <button className=\"btn btn-primary btn-lg\" id=\"write-post\" type=\"button\" data-toggle=\"modal\" data-target=\"#write-post-modal\">Write Post</button> : \"\";\n        \n        return (\n            <div className=\"mx-sm-5\">\n            <div className=\"mx-md-5\">\n                {feedItems}\n                {writePostBtn}        \n\n                <div className=\"modal fade\" id=\"write-post-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Compose</h5>\n                        <button type=\"button\" id=\"closeModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"modal-body\">\n                            <input id=\"title\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"What's on your mind?\" value={this.state.title} onChange={this.handleChange} required /><br />\n                            <textarea id=\"body\" className=\"form-control\" type=\"text\" name=\"body\" value={this.state.body} onChange={this.handleChange} required />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Post!\" />\n                        </div>\n                    </form>\n                    </div>\n                </div>\n                </div>\n            </div>            \n            </div>\n        );\n    }\n}\n\n\n\nclass Like extends React.Component{\n    constructor(props){ \n        super(props);\n        // props should be the post id, and make a separate request for the number of likes on the post so it can update state\n        this.state = {\n            likes: null,\n            liked: null\n        };\n        this.getLikes = this.getLikes.bind(this);\n        this.isLiked = this.isLiked.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        \n    }\n    componentDidMount = () => {\n        this.getLikes();\n        this.isLiked();\n    }\n    getLikes(){\n        getRequest(\"like/\"+this.props.post_id+'/').then((response) => {\n            this.setState({likes: response['likes']})\n        });\n    }\n    isLiked(){\n        if(this.props.user){\n            postRequest('isliked/', {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                this.setState({liked: response['liked']});\n            });\n        } else{\n            this.setState({liked: false});\n        }\n    }\n    handleClick(e){\n        e.preventDefault();\n\n        if(!this.props.user){\n            alert('Please login');\n            return;\n        }\n\n        if(this.state.liked){ // send unlike\n            postRequest(\"unlike/\", {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                if(response['status'] === 'OK'){\n                    this.setState({\n                        likes: this.state.likes - 1,\n                        liked: false\n                    });\n                }\n                    \n            });\n            \n        } else{ // send like\n            postRequest(\"like/\" + this.props.post_id + '/', {\"user\": this.props.user, \"post_id\": this.props.post_id}).then((response) => {\n                if(response['status'] === 'OK')\n                    this.setState({\n                        likes: this.state.likes + 1,\n                        liked: true\n                    });\n            });\n        }\n    }\n    render(){\n        return(\n            <a role=\"button\" className=\"btn btn-outline-light card-link\" onClick={this.handleClick}>\n                {this.state.liked ? \n                <img src={process.env.PUBLIC_URL + '/images/like-color.svg'} width=\"45\" height=\"30\" alt=\"\" /> :\n                <img src={process.env.PUBLIC_URL + '/images/like-gray.svg'} width=\"45\" height=\"30\" alt=\"\" /> }\n                <span className=\"ml-1\">{this.state.likes}</span>\n            </a>\n        );\n    }\n}\n\nclass Comment extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(){\n        postRequest('allcomments/', {})\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <input className=\"form-control\" type=\"text\" name=\"body\" required /><br />\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Send\" />\n            </form>\n        );\n    }\n}\n\nexport {Feed};"]},"metadata":{},"sourceType":"module"}